(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{562:function(e,t,a){"use strict";a.r(t);var s=a(29),i=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"minio存储桶通知指南"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minio存储桶通知指南"}},[e._v("#")]),e._v(" Minio存储桶通知指南")]),e._v(" "),a("p",[e._v("存储桶（Bucket）如果发生改变,比如上传对象和删除对象，可以使用存储桶事件通知机制进行监控，并通过以下方式发布出去:")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[e._v("Notification Targets")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("a",{attrs:{href:"https://www.bookstack.cn/read/MinioCookbookZH/6.md#AMQP",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("AMQP")]),a("OutboundLink")],1)])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("a",{attrs:{href:"https://www.bookstack.cn/read/MinioCookbookZH/6.md#MQTT",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("MQTT")]),a("OutboundLink")],1)])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("a",{attrs:{href:"https://www.bookstack.cn/read/MinioCookbookZH/6.md#Elasticsearch",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Elasticsearch")]),a("OutboundLink")],1)])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("a",{attrs:{href:"https://www.bookstack.cn/read/MinioCookbookZH/6.md#Redis",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Redis")]),a("OutboundLink")],1)])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("a",{attrs:{href:"https://www.bookstack.cn/read/MinioCookbookZH/6.md#NATS",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("NATS")]),a("OutboundLink")],1)])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("a",{attrs:{href:"https://www.bookstack.cn/read/MinioCookbookZH/6.md#PostgreSQL",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("PostgreSQL")]),a("OutboundLink")],1)])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("a",{attrs:{href:"https://www.bookstack.cn/read/MinioCookbookZH/6.md#MySQL",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("MySQL")]),a("OutboundLink")],1)])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("a",{attrs:{href:"https://www.bookstack.cn/read/MinioCookbookZH/6.md#apache-kafka",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Apache Kafka")]),a("OutboundLink")],1)])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("a",{attrs:{href:"https://www.bookstack.cn/read/MinioCookbookZH/6.md#webhooks",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Webhooks")]),a("OutboundLink")],1)])])])]),e._v(" "),a("h2",{attrs:{id:"前提条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前提条件"}},[e._v("#")]),e._v(" 前提条件")]),e._v(" "),a("ul",[a("li",[e._v("从"),a("a",{attrs:{href:"https://docs.min.io/docs/minio-quickstart-guide",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里"),a("OutboundLink")],1),e._v("下载并安装Minio Server。")]),e._v(" "),a("li",[e._v("从"),a("a",{attrs:{href:"https://docs.min.io/docs/minio-client-quickstart-guide",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里"),a("OutboundLink")],1),e._v("下载并安装Minio Client。")])]),e._v(" "),a("h2",{attrs:{id:"使用amqp发布minio事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用amqp发布minio事件"}},[e._v("#")]),e._v(" 使用AMQP发布Minio事件")]),e._v(" "),a("p",[e._v("从"),a("a",{attrs:{href:"https://www.rabbitmq.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里"),a("OutboundLink")],1),e._v("下载安装RabbitMQ。")]),e._v(" "),a("h3",{attrs:{id:"第一步-将amqp-endpoint添加到minio"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一步-将amqp-endpoint添加到minio"}},[e._v("#")]),e._v(" 第一步: 将AMQP endpoint添加到Minio")]),e._v(" "),a("p",[e._v("Minio Server的配置文件默认路径是 "),a("code",[e._v("~/.minio/config.json")]),e._v("。AMQP配置信息是在"),a("code",[e._v("notify")]),e._v("这个节点下的"),a("code",[e._v("amqp")]),e._v("节点下，在这里为你的AMQP实例创建配置信息键值对，key是你的AMQP endpoint的名称，value是下面表格中列列的键值对集合。")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[e._v("参数")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("类型")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("描述")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("enable")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("bool")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(必须) 此AMQP server endpoint是否可用")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("url")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(必须) AMQP server endpoint, 例如. "),a("code",[e._v("amqp://myuser:mypassword@localhost:5672")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("exchange")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("exchange名称")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("routingKey")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("发布用的Routing key")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("exchangeType")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("exchange类型")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("deliveryMode")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("uint8")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("发布方式。 0或1 - 瞬态; 2 - 持久。")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("mandatory")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("bool")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Publishing related bool.")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("immediate")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("bool")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Publishing related bool.")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("durable")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("bool")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Exchange declaration related bool.")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("internal")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("bool")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Exchange declaration related bool.")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("noWait")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("bool")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Exchange declaration related bool.")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("autoDeleted")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("bool")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("Exchange declaration related bool.")])])])]),e._v(" "),a("p",[e._v("下面展示的是RabbitMQ的配置示例:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"amqp": {    "1": {        "enable": true,        "url": "amqp://myuser:mypassword@localhost:5672",        "exchange": "bucketevents",        "routingKey": "bucketlogs",        "exchangeType": "fanout",        "deliveryMode": 0,        "mandatory": false,        "immediate": false,        "durable": false,        "internal": false,        "noWait": false,        "autoDeleted": false    }}\n')])])]),a("p",[e._v("更新完配置文件后，重启Minio Server让配置生效。如果一切顺利，Minio Server会在启动时输出一行信息，类似 "),a("code",[e._v("SQS ARNs: arn![:minio:](https://www.emoji-cheat-sheet.com/graphics/emojis/minio.png)sqs![:us-east-1:](https://www.emoji-cheat-sheet.com/graphics/emojis/us-east-1.png)1:amqp")]),e._v("。")]),e._v(" "),a("p",[e._v("Minio支持"),a("a",{attrs:{href:"https://www.rabbitmq.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("RabbitMQ"),a("OutboundLink")],1),e._v("中所有的交换方式，这次我们采用 "),a("code",[e._v("fanout")]),e._v(" 交换。")]),e._v(" "),a("p",[e._v('注意一下，你可以听从你内心的想法，想配几个AMQP服务就配几个，只要每个AMQP服务实例有不同的ID (比如前面示例中的"1") 和配置信息。')]),e._v(" "),a("h3",{attrs:{id:"第二步-使用minio客户端启用bucket通知"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二步-使用minio客户端启用bucket通知"}},[e._v("#")]),e._v(" 第二步: 使用Minio客户端启用bucket通知")]),e._v(" "),a("p",[e._v("如果一个JPEG图片上传到"),a("code",[e._v("myminio")]),e._v(" server里的"),a("code",[e._v("images")]),e._v(" 存储桶或者从桶中删除，一个存储桶事件通知就会被触发。 这里ARN值是"),a("code",[e._v("arn![:minio:](https://www.emoji-cheat-sheet.com/graphics/emojis/minio.png)sqs![:us-east-1:](https://www.emoji-cheat-sheet.com/graphics/emojis/us-east-1.png)1:amqp")]),e._v("，想了解更多关于ARN的信息，请参考"),a("a",{attrs:{href:"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("AWS ARN"),a("OutboundLink")],1),e._v(" documentation.")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mc mb myminio/imagesmc events add  myminio/images arn:minio:sqs:us-east-1:1:amqp --suffix .jpgmc events list myminio/imagesarn:minio:sqs:us-east-1:1:amqp s3:ObjectCreated:*,s3:ObjectRemoved:* Filter: suffix=”.jpg”\n")])])]),a("h3",{attrs:{id:"第三步-在rabbitmq上进行验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三步-在rabbitmq上进行验证"}},[e._v("#")]),e._v(" 第三步:在RabbitMQ上进行验证")]),e._v(" "),a("p",[e._v("下面将要出场的python程序会等待队列交换T"),a("code",[e._v("bucketevents")]),e._v("并在控制台中输出事件通知。我们使用的是"),a("a",{attrs:{href:"https://www.rabbitmq.com/tutorials/tutorial-three-python.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Pika Python Client"),a("OutboundLink")],1),e._v(" 来实现此功能。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("#!/usr/bin/env pythonimport pikaconnection = pika.BlockingConnection(pika.ConnectionParameters(        host='localhost'))channel = connection.channel()channel.exchange_declare(exchange='bucketevents',                         exchange_type='fanout')result = channel.queue_declare(exclusive=False)queue_name = result.method.queuechannel.queue_bind(exchange='bucketevents',                   queue=queue_name)print(' [*] Waiting for logs. To exit press CTRL+C')def callback(ch, method, properties, body):    print(\" [x] %r\" % body)channel.basic_consume(callback,                      queue=queue_name,                      no_ack=False)channel.start_consuming()\n")])])]),a("p",[e._v("执行示例中的python程序来观察RabbitMQ事件。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("python rabbit.py\n")])])]),a("p",[e._v("另开一个terminal终端并上传一张JPEG图片到"),a("code",[e._v("images")]),e._v("存储桶。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mc cp myphoto.jpg myminio/images\n")])])]),a("p",[e._v("一旦上传完毕，你应该会通过RabbitMQ收到下面的事件通知。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('python rabbit.py‘{“Records”:[{“eventVersion”:”2.0",”eventSource”:”aws:s3",”awsRegion”:”us-east-1",”eventTime”:”2016–09–08T22:34:38.226Z”,”eventName”:”s3:ObjectCreated:Put”,”userIdentity”:{“principalId”:”minio”},”requestParameters”:{“sourceIPAddress”:”10.1.10.150:44576"},”responseElements”:{},”s3":{“s3SchemaVersion”:”1.0",”configurationId”:”Config”,”bucket”:{“name”:”images”,”ownerIdentity”:{“principalId”:”minio”},”arn”:”arn:aws:s3:::images”},”object”:{“key”:”myphoto.jpg”,”size”:200436,”sequencer”:”147279EAF9F40933"}}}],”level”:”info”,”msg”:””,”time”:”2016–09–08T15:34:38–07:00"}\\n\n')])])]),a("h2",{attrs:{id:"使用mqtt发布minio事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用mqtt发布minio事件"}},[e._v("#")]),e._v(" 使用MQTT发布Minio事件")]),e._v(" "),a("p",[e._v("从 "),a("a",{attrs:{href:"https://mosquitto.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里"),a("OutboundLink")],1),e._v("安装MQTT Broker。")]),e._v(" "),a("h3",{attrs:{id:"第一步-添加mqtt-endpoint到minio"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一步-添加mqtt-endpoint到minio"}},[e._v("#")]),e._v(" 第一步: 添加MQTT endpoint到Minio")]),e._v(" "),a("p",[e._v("Minio Server的配置文件默认路径是 "),a("code",[e._v("~/.minio/config.json")]),e._v("。MQTT配置信息是在"),a("code",[e._v("notify")]),e._v("这个节点下的"),a("code",[e._v("mqtt")]),e._v("节点下，在这里为你的MQTT实例创建配置信息键值对，key是你的MQTT endpoint的名称，value是下面表格中列列的键值对集合。")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[e._v("参数")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("类型")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("描述")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("enable")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("bool")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(必须) 这个 server endpoint是否可用?")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("broker")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(必须) MQTT server endpoint, 例如. "),a("code",[e._v("tcp://localhost:1883")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("topic")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(必须) 要发布的MQTT主题的名称, 例如. "),a("code",[e._v("minio")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("qos")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("int")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("设置服务质量级别")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("clientId")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("MQTT代理识别Minio的唯一ID")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("username")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("连接MQTT server的用户名 (如果需要的话)")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("password")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("链接MQTT server的密码 (如果需要的话)")])])])]),e._v(" "),a("p",[e._v("以下是一个MQTT的配置示例:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"mqtt": {    "1": {        "enable": true,        "broker": "tcp://localhost:1883",        "topic": "minio",        "qos": 1,        "clientId": "minio",        "username": "",        "password": ""    }}\n')])])]),a("p",[e._v("更新完配置文件后，重启Minio Server让配置生效。如果一切顺利，Minio Server会在启动时输出一行信息，类似 "),a("code",[e._v("SQS ARNs: arn![:minio:](https://www.emoji-cheat-sheet.com/graphics/emojis/minio.png)sqs![:us-east-1:](https://www.emoji-cheat-sheet.com/graphics/emojis/us-east-1.png)1:mqtt")]),e._v("。")]),e._v(" "),a("p",[e._v("Minio支持任何支持MQTT 3.1或3.1.1的MQTT服务器，并且可以通过TCP，TLS或Websocket连接使用"),a("code",[e._v("tcp://")]),e._v(", "),a("code",[e._v("tls://")]),e._v(", or "),a("code",[e._v("ws://")]),e._v("分别作为代理URL的方案。 更多信息，请参考 "),a("a",{attrs:{href:"http://www.eclipse.org/paho/clients/golang/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Go Client"),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("p",[e._v('注意一下，你还是和之前AMQP一样可以听从你内心的想法，想配几个MQTT服务就配几个，只要每个MQTT服务实例有不同的ID (比如前面示例中的"1") 和配置信息。')]),e._v(" "),a("h3",{attrs:{id:"第二步-使用minio客户端启用bucket通知-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二步-使用minio客户端启用bucket通知-2"}},[e._v("#")]),e._v(" 第二步: 使用Minio客户端启用bucket通知")]),e._v(" "),a("p",[e._v("如果一个JPEG图片上传到"),a("code",[e._v("myminio")]),e._v(" server里的"),a("code",[e._v("images")]),e._v(" 存储桶或者从桶中删除，一个存储桶事件通知就会被触发。 这里ARN值是"),a("code",[e._v("arn![:minio:](https://www.emoji-cheat-sheet.com/graphics/emojis/minio.png)sqs![:us-east-1:](https://www.emoji-cheat-sheet.com/graphics/emojis/us-east-1.png)1:mqtt")]),e._v("。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mc mb myminio/imagesmc events add  myminio/images arn:minio:sqs:us-east-1:1:mqtt --suffix .jpgmc events list myminio/imagesarn:minio:sqs:us-east-1:1:amqp s3:ObjectCreated:*,s3:ObjectRemoved:* Filter: suffix=”.jpg”\n")])])]),a("h3",{attrs:{id:"第三步-验证mqtt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三步-验证mqtt"}},[e._v("#")]),e._v(" 第三步：验证MQTT")]),e._v(" "),a("p",[e._v("下面的python程序等待mqtt主题"),a("code",[e._v("/ minio")]),e._v("，并在控制台上打印事件通知。 我们使用"),a("a",{attrs:{href:"https://pypi.python.org/pypi/paho-mqtt/",target:"_blank",rel:"noopener noreferrer"}},[e._v("paho-mqtt"),a("OutboundLink")],1),e._v("库来执行此操作。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('#!/usr/bin/env pythonfrom __future__ import print_functionimport paho.mqtt.client as mqtt# The callback for when the client receives a CONNACK response from the server.def on_connect(client, userdata, flags, rc):    print("Connected with result code", rc)    # Subscribing in on_connect() means that if we lose the connection and    # reconnect then subscriptions will be renewed.    client.subscribe("/minio")# The callback for when a PUBLISH message is received from the server.def on_message(client, userdata, msg):    print(msg.payload)client = mqtt.Client()client.on_connect = on_connectclient.on_message = on_messageclient.connect("localhost:1883", 1883, 60)# Blocking call that processes network traffic, dispatches callbacks and# handles reconnecting.# Other loop*() functions are available that give a threaded interface and a# manual interface.client.loop_forever()\n')])])]),a("p",[e._v("执行这个python示例程序来观察MQTT事件。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("python mqtt.py\n")])])]),a("p",[e._v("打开一个新的terminal终端并上传一张JPEG图片到"),a("code",[e._v("images")]),e._v(" 存储桶。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mc cp myphoto.jpg myminio/images\n")])])]),a("p",[e._v("一旦上传完毕，你应该会通过MQTT收到下面的事件通知。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('python mqtt.py{“Records”:[{“eventVersion”:”2.0",”eventSource”:”aws:s3",”awsRegion”:”us-east-1",”eventTime”:”2016–09–08T22:34:38.226Z”,”eventName”:”s3:ObjectCreated:Put”,”userIdentity”:{“principalId”:”minio”},”requestParameters”:{“sourceIPAddress”:”10.1.10.150:44576"},”responseElements”:{},”s3":{“s3SchemaVersion”:”1.0",”configurationId”:”Config”,”bucket”:{“name”:”images”,”ownerIdentity”:{“principalId”:”minio”},”arn”:”arn:aws:s3:::images”},”object”:{“key”:”myphoto.jpg”,”size”:200436,”sequencer”:”147279EAF9F40933"}}}],”level”:”info”,”msg”:””,”time”:”2016–09–08T15:34:38–07:00"}\n')])])]),a("h2",{attrs:{id:"使用elasticsearch发布minio事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用elasticsearch发布minio事件"}},[e._v("#")]),e._v(" 使用Elasticsearch发布Minio事件")]),e._v(" "),a("p",[e._v("安装 "),a("a",{attrs:{href:"https://www.elastic.co/downloads/elasticsearch",target:"_blank",rel:"noopener noreferrer"}},[e._v("Elasticsearch"),a("OutboundLink")],1),e._v(" 。")]),e._v(" "),a("p",[e._v("这个通知目标支持两种格式: "),a("em",[e._v("namespace")]),e._v(" and "),a("em",[e._v("access")]),e._v("。")]),e._v(" "),a("p",[e._v("如果使用的是 "),a("em",[e._v("namespace")]),e._v(" 格式, Minio将桶中的对象与索引中的文档进行同步。对于Minio的每一个事件，ES都会创建一个document,这个document的ID就是存储桶以及存储对象的名称。事件的其他细节存储在document的正文中。因此，如果一个已经存在的对象在Minio中被覆盖，在ES中的相对应的document也会被更新。如果一个对象被删除，相对应的document也会从index中删除。")]),e._v(" "),a("p",[e._v("如果使用的是"),a("em",[e._v("access")]),e._v("格式，Minio将事件作为document加到ES的index中。对于每一个事件，ES同样会创建一个document,这个document包含事件的所有细节，document的时间戳设置为事件的时间戳，并将该document加到ES的index中。这个document的ID是由ES随机生成的。在"),a("em",[e._v("access")]),e._v("格式下，没有文档会被删除或者修改，对于一个对象的操作，都会生成新的document附加到index中。")]),e._v(" "),a("p",[e._v("下面的步骤展示的是在"),a("code",[e._v("namespace")]),e._v("格式下，如何使用通知目标。另一种格式和这个很类似，为了不让你们说我墨迹，就不再赘述了。")]),e._v(" "),a("h3",{attrs:{id:"第一步-确保至少满足第低要求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一步-确保至少满足第低要求"}},[e._v("#")]),e._v(" 第一步：确保至少满足第低要求")]),e._v(" "),a("p",[e._v("Minio要求使用的是ES 5.X系统版本。如果使用的是低版本的ES，也没关系，ES官方支持升级迁移，详情请看"),a("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/setup-upgrade.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里"),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("h3",{attrs:{id:"第二步-把es集成到minio中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二步-把es集成到minio中"}},[e._v("#")]),e._v(" 第二步：把ES集成到Minio中")]),e._v(" "),a("p",[e._v("Minio Server的配置文件默认路径是 "),a("code",[e._v("~/.minio/config.json")]),e._v("。ES配置信息是在"),a("code",[e._v("notify")]),e._v("这个节点下的"),a("code",[e._v("elasticsearch")]),e._v("节点下，在这里为你的ES实例创建配置信息键值对，key是你的ES的名称，value是下面表格中列列的键值对集合。")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[e._v("参数")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("类型")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("描述")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("enable")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("bool")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(必须) 是否启用这个配置?")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("format")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(必须) 是"),a("code",[e._v("namespace")]),e._v(" 还是 "),a("code",[e._v("access")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("url")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(必须) ES地址，比如: "),a("code",[e._v("http://localhost:9200")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("index")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(必须) 给Minio用的index")])])])]),e._v(" "),a("p",[e._v("以下是ES的一个配置示例:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"elasticsearch": {    "1": {        "enable": true,        "format": "namespace",        "url": "http://127.0.0.1:9200",        "index": "minio_events"    }},\n')])])]),a("p",[e._v("更新完配置文件后，重启Minio Server让配置生效。如果一切顺利，Minio Server会在启动时输出一行信息，类似 "),a("code",[e._v("SQS ARNs: arn![:minio:](https://www.emoji-cheat-sheet.com/graphics/emojis/minio.png)sqs![:us-east-1:](https://www.emoji-cheat-sheet.com/graphics/emojis/us-east-1.png)1:elasticsearch")]),e._v("。")]),e._v(" "),a("p",[e._v('注意一下，你又可以再一次听从你内心的想法，想配几个ES服务就配几个，只要每个ES服务实例有不同的ID (比如前面示例中的"1") 和配置信息。')]),e._v(" "),a("h3",{attrs:{id:"第三步-使用minio客户端启用bucket通知"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三步-使用minio客户端启用bucket通知"}},[e._v("#")]),e._v(" 第三步：使用Minio客户端启用bucket通知")]),e._v(" "),a("p",[e._v("我们现在可以在一个叫"),a("code",[e._v("images")]),e._v("的存储桶上开启事件通知。一旦有文件被创建或者覆盖，一个新的ES的document会被创建或者更新到之前咱配的index里。如果一个已经存在的对象被删除，这个对应的document也会从index中删除。因此，这个ES index里的行，就映射着"),a("code",[e._v("images")]),e._v("存储桶里的对象。")]),e._v(" "),a("p",[e._v("要配置这种存储桶通知，我们需要用到前面步骤Minio输出的ARN信息。更多有关ARN的资料，请参考"),a("a",{attrs:{href:"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里"),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("p",[e._v("有了"),a("code",[e._v("mc")]),e._v("这个工具，这些配置信息很容易就能添加上。假设咱们的Minio服务别名叫"),a("code",[e._v("myminio")]),e._v(",可执行下列脚本：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mc mb myminio/imagesmc events add  myminio/images arn:minio:sqs:us-east-1:1:elasticsearch --suffix .jpgmc events list myminio/imagesarn:minio:sqs:us-east-1:1:elasticsearch s3:ObjectCreated:*,s3:ObjectRemoved:* Filter: suffix=”.jpg”\n")])])]),a("h3",{attrs:{id:"第四步-验证es"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四步-验证es"}},[e._v("#")]),e._v(" 第四步：验证ES")]),e._v(" "),a("p",[e._v("上传一张图片到"),a("code",[e._v("images")]),e._v(" 存储桶。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mc cp myphoto.jpg myminio/images\n")])])]),a("p",[e._v("使用curl查到"),a("code",[e._v("minio_events")]),e._v(" index中的内容。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('$ curl  "http://localhost:9200/minio_events/_search?pretty=true"{  "took" : 40,  "timed_out" : false,  "_shards" : {    "total" : 5,    "successful" : 5,    "failed" : 0  },  "hits" : {    "total" : 1,    "max_score" : 1.0,    "hits" : [      {        "_index" : "minio_events",        "_type" : "event",        "_id" : "images/myphoto.jpg",        "_score" : 1.0,        "_source" : {          "Records" : [            {              "eventVersion" : "2.0",              "eventSource" : "minio:s3",              "awsRegion" : "us-east-1",              "eventTime" : "2017-03-30T08:00:41Z",              "eventName" : "s3:ObjectCreated:Put",              "userIdentity" : {                "principalId" : "minio"              },              "requestParameters" : {                "sourceIPAddress" : "127.0.0.1:38062"              },              "responseElements" : {                "x-amz-request-id" : "14B09A09703FC47B",                "x-minio-origin-endpoint" : "http://192.168.86.115:9000"              },              "s3" : {                "s3SchemaVersion" : "1.0",                "configurationId" : "Config",                "bucket" : {                  "name" : "images",                  "ownerIdentity" : {                    "principalId" : "minio"                  },                  "arn" : "arn:aws:s3:::images"                },                "object" : {                  "key" : "myphoto.jpg",                  "size" : 6474,                  "eTag" : "a3410f4f8788b510d6f19c5067e60a90",                  "sequencer" : "14B09A09703FC47B"                }              },              "source" : {                "host" : "127.0.0.1",                "port" : "38062",                "userAgent" : "Minio (linux; amd64) minio-go/2.0.3 mc/2017-02-15T17:57:25Z"              }            }          ]        }      }    ]  }}\n')])])]),a("p",[e._v("这个输出显示在ES中为这个事件创建了一个document。")]),e._v(" "),a("p",[e._v("这里我们可以看到这个document ID就是存储桶和对象的名称。如果用的是"),a("code",[e._v("access")]),e._v("格式，这个document ID就是由ES随机生成的。")]),e._v(" "),a("h2",{attrs:{id:"使用redis发布minio事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用redis发布minio事件"}},[e._v("#")]),e._v(" 使用Redis发布Minio事件")]),e._v(" "),a("p",[e._v("安装 "),a("a",{attrs:{href:"http://redis.io/download",target:"_blank",rel:"noopener noreferrer"}},[e._v("Redis"),a("OutboundLink")],1),e._v('。为了演示，我们将数据库密码设为"yoursecret"。')]),e._v(" "),a("p",[e._v("这种通知目标支持两种格式: "),a("em",[e._v("namespace")]),e._v(" 和 "),a("em",[e._v("access")]),e._v("。")]),e._v(" "),a("p",[e._v("如果用的是"),a("em",[e._v("namespacee")]),e._v('格式，Minio将存储桶里的对象同步成Redis hash中的条目。对于每一个条目，对应一个存储桶里的对象，其key都被设为"存储桶名称/对象名称"，value都是一个有关这个Minio对象的JSON格式的事件数据。如果对象更新或者删除，hash中对象的条目也会相应的更新或者删除。')]),e._v(" "),a("p",[e._v("如果使用的是"),a("em",[e._v("access")]),e._v(",Minio使用"),a("a",{attrs:{href:"https://redis.io/commands/rpush",target:"_blank",rel:"noopener noreferrer"}},[e._v("RPUSH"),a("OutboundLink")],1),e._v("将事件添加到list中。这个list中每一个元素都是一个JSON格式的list,这个list中又有两个元素，第一个元素是时间戳的字符串，第二个元素是一个含有在这个存储桶上进行操作的事件数据的JSON对象。在这种格式下，list中的元素不会更新或者删除。")]),e._v(" "),a("p",[e._v("下面的步骤展示如何在"),a("code",[e._v("namespace")]),e._v("和"),a("code",[e._v("access")]),e._v("格式下使用通知目标。")]),e._v(" "),a("h3",{attrs:{id:"第一步-集成redis到minio"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一步-集成redis到minio"}},[e._v("#")]),e._v(" 第一步：集成Redis到Minio")]),e._v(" "),a("p",[e._v("Minio Server的配置文件默认路径是 "),a("code",[e._v("~/.minio/config.json")]),e._v("。Redis配置信息是在"),a("code",[e._v("notify")]),e._v("这个节点下的"),a("code",[e._v("redis")]),e._v("节点下，在这里为你的Redis实例创建配置信息键值对，key是你的Redis端的名称，value是下面表格中的键值对里面值的集合。")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[e._v("参数")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("类型")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("描述")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("enable")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("bool")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(必须) 这个配置是否可用?")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("format")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(必须) 是 "),a("code",[e._v("namespace")]),e._v(" 还是 "),a("code",[e._v("access")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("address")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(必须) Redis服务地址，比如: "),a("code",[e._v("localhost:6379")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("password")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(可选) Redis服务密码")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("key")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(必须) 事件要存储到redis key的名称。如果用的是"),a("code",[e._v("namespace")]),e._v("格式的话，则是一个hash,如果是"),a("code",[e._v("access")]),e._v("格式的话，则是一个list")])])])]),e._v(" "),a("p",[e._v("下面是一个Redis配置示例:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"redis": {    "1": {        "enable": true,        "address": "127.0.0.1:6379",        "password": "yoursecret",        "key": "bucketevents"    }}\n')])])]),a("p",[e._v("更新完配置文件后，重启Minio Server让配置生效。如果一切顺利，Minio Server会在启动时输出一行信息，类似 "),a("code",[e._v("SQS ARNs: arn![:minio:](https://www.emoji-cheat-sheet.com/graphics/emojis/minio.png)sqs![:us-east-1:](https://www.emoji-cheat-sheet.com/graphics/emojis/us-east-1.png)1:redis")]),e._v("。")]),e._v(" "),a("p",[e._v('注意一下，你永远都可以听从你内心的想法，想配几个Redis服务就配几个，只要每个Redis服务实例有不同的ID (比如前面示例中的"1") 和配置信息。')]),e._v(" "),a("h3",{attrs:{id:"第二步-使用minio客户端启用bucket通知-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二步-使用minio客户端启用bucket通知-3"}},[e._v("#")]),e._v(" 第二步: 使用Minio客户端启用bucket通知")]),e._v(" "),a("p",[e._v("我们现在可以在一个叫"),a("code",[e._v("images")]),e._v("的存储桶上开启事件通知。一旦有文件被创建或者覆盖，一个新的key会被创建,或者一个已经存在的key就会被更新到之前配置好的redis hash里。如果一个已经存在的对象被删除，这个对应的key也会从hash中删除。因此，这个Redis hash里的行，就映射着"),a("code",[e._v("images")]),e._v("存储桶里的"),a("code",[e._v(".jpg")]),e._v("对象。")]),e._v(" "),a("p",[e._v("要配置这种存储桶通知，我们需要用到前面步骤Minio输出的ARN信息。更多有关ARN的资料，请参考"),a("a",{attrs:{href:"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里"),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("p",[e._v("有了"),a("code",[e._v("mc")]),e._v("这个工具，这些配置信息很容易就能添加上。假设咱们的Minio服务别名叫"),a("code",[e._v("myminio")]),e._v(",可执行下列脚本：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mc mb myminio/imagesmc events add  myminio/images arn:minio:sqs:us-east-1:1:redis --suffix .jpgmc events list myminio/imagesarn:minio:sqs:us-east-1:1:redis s3:ObjectCreated:*,s3:ObjectRemoved:* Filter: suffix=”.jpg”\n")])])]),a("h3",{attrs:{id:"第三步-验证redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三步-验证redis"}},[e._v("#")]),e._v(" 第三步：验证Redis")]),e._v(" "),a("p",[e._v("启动"),a("code",[e._v("redis-cli")]),e._v("这个Redis客户端程序来检查Redis中的内容. 运行"),a("code",[e._v("monitor")]),e._v("Redis命令将会输出在Redis上执行的每个命令的。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("redis-cli -a yoursecret127.0.0.1:6379> monitorOK\n")])])]),a("p",[e._v("打开一个新的terminal终端并上传一张JPEG图片到"),a("code",[e._v("images")]),e._v(" 存储桶。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mc cp myphoto.jpg myminio/images\n")])])]),a("p",[e._v("在上一个终端中，你将看到Minio在Redis上执行的操作：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('127.0.0.1:6379> monitorOK1490686879.650649 [0 172.17.0.1:44710] "PING"1490686879.651061 [0 172.17.0.1:44710] "HSET" "minio_events" "images/myphoto.jpg" "{\\"Records\\":[{\\"eventVersion\\":\\"2.0\\",\\"eventSource\\":\\"minio:s3\\",\\"awsRegion\\":\\"us-east-1\\",\\"eventTime\\":\\"2017-03-28T07:41:19Z\\",\\"eventName\\":\\"s3:ObjectCreated:Put\\",\\"userIdentity\\":{\\"principalId\\":\\"minio\\"},\\"requestParameters\\":{\\"sourceIPAddress\\":\\"127.0.0.1:52234\\"},\\"responseElements\\":{\\"x-amz-request-id\\":\\"14AFFBD1ACE5F632\\",\\"x-minio-origin-endpoint\\":\\"http://192.168.86.115:9000\\"},\\"s3\\":{\\"s3SchemaVersion\\":\\"1.0\\",\\"configurationId\\":\\"Config\\",\\"bucket\\":{\\"name\\":\\"images\\",\\"ownerIdentity\\":{\\"principalId\\":\\"minio\\"},\\"arn\\":\\"arn:aws:s3:::images\\"},\\"object\\":{\\"key\\":\\"myphoto.jpg\\",\\"size\\":2586,\\"eTag\\":\\"5d284463f9da279f060f0ea4d11af098\\",\\"sequencer\\":\\"14AFFBD1ACE5F632\\"}},\\"source\\":{\\"host\\":\\"127.0.0.1\\",\\"port\\":\\"52234\\",\\"userAgent\\":\\"Minio (linux; amd64) minio-go/2.0.3 mc/2017-02-15T17:57:25Z\\"}}]}"\n')])])]),a("p",[e._v("在这我们可以看到Minio在"),a("code",[e._v("minio_events")]),e._v("这个key上执行了"),a("code",[e._v("HSET")]),e._v("命令。")]),e._v(" "),a("p",[e._v("如果用的是"),a("code",[e._v("access")]),e._v("格式，那么"),a("code",[e._v("minio_events")]),e._v("就是一个list,Minio就会调用"),a("code",[e._v("RPUSH")]),e._v("添加到list中。这个list的消费者会使用"),a("code",[e._v("BLPOP")]),e._v("从list的最左端删除list元素。")]),e._v(" "),a("h2",{attrs:{id:"使用nats发布minio事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用nats发布minio事件"}},[e._v("#")]),e._v(" 使用NATS发布Minio事件")]),e._v(" "),a("p",[e._v("安装 "),a("a",{attrs:{href:"http://nats.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("NATS"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"第一步-集成nats到minio"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一步-集成nats到minio"}},[e._v("#")]),e._v(" 第一步：集成NATS到Minio")]),e._v(" "),a("p",[e._v("Minio Server的配置文件默认路径是 "),a("code",[e._v("~/.minio/config.json")]),e._v("。参考下面的示例修改NATS的配置:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"nats": {    "1": {        "enable": true,        "address": "0.0.0.0:4222",        "subject": "bucketevents",        "username": "yourusername",        "password": "yoursecret",        "token": "",        "secure": false,        "pingInterval": 0        "streaming": {            "enable": false,            "clusterID": "",            "clientID": "",            "async": false,            "maxPubAcksInflight": 0        }    }},\n')])])]),a("p",[e._v("更新完配置文件后，重启Minio Server让配置生效。"),a("code",[e._v("bucketevents")]),e._v("是NATS在这个例子中使用的主题。")]),e._v(" "),a("p",[e._v("Minio服务也支持 "),a("a",{attrs:{href:"http://nats.io/documentation/streaming/nats-streaming-intro/",target:"_blank",rel:"noopener noreferrer"}},[e._v("NATS Streaming mode"),a("OutboundLink")],1),e._v(" ，这种模式额外提供了像 "),a("code",[e._v("Message/event persistence")]),e._v(", "),a("code",[e._v("At-least-once-delivery")]),e._v(", 以及 "),a("code",[e._v("Publisher rate limiting")]),e._v("这样的功能。如果想让Minio服务发送通知到NATS Streaming server,参考下面示面进行配置：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"nats": {    "1": {        "enable": true,        "address": "0.0.0.0:4222",        "subject": "bucketevents",        "username": "yourusername",        "password": "yoursecret",        "token": "",        "secure": false,        "pingInterval": 0        "streaming": {            "enable": true,            "clusterID": "test-cluster",            "clientID": "minio-client",            "async": true,            "maxPubAcksInflight": 10        }    }},\n')])])]),a("p",[e._v("更多关于 "),a("code",[e._v("clusterID")]),e._v(", "),a("code",[e._v("clientID")]),e._v(" 的信息，请看 "),a("a",{attrs:{href:"https://github.com/nats-io/nats-streaming-server/blob/master/README.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("NATS documentation"),a("OutboundLink")],1),e._v(". 关于 "),a("code",[e._v("maxPubAcksInflight")]),e._v(" ，请看 "),a("a",{attrs:{href:"https://github.com/nats-io/go-nats-streaming#publisher-rate-limiting",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"第二步-使用minio客户端启用bucket通知-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二步-使用minio客户端启用bucket通知-4"}},[e._v("#")]),e._v(" 第二步: 使用Minio客户端启用bucket通知")]),e._v(" "),a("p",[e._v("我们现在可以在一个叫"),a("code",[e._v("images")]),e._v("的存储桶上开启事件通知，一旦"),a("code",[e._v("myminio")]),e._v(" server上有文件 从"),a("code",[e._v("images")]),e._v("存储桶里删除或者上传到存储桶中，事件即被触发。在这里，ARN的值是"),a("code",[e._v("arn![:minio:](https://www.emoji-cheat-sheet.com/graphics/emojis/minio.png)sqs![:us-east-1:](https://www.emoji-cheat-sheet.com/graphics/emojis/us-east-1.png)1:nats")]),e._v("。 更多有关ARN的资料，请参考"),a("a",{attrs:{href:"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里"),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mc mb myminio/imagesmc events add  myminio/images arn:minio:sqs:us-east-1:1:nats --suffix .jpgmc events list myminio/imagesarn:minio:sqs:us-east-1:1:nats s3:ObjectCreated:*,s3:ObjectRemoved:* Filter: suffix=”.jpg”\n")])])]),a("h3",{attrs:{id:"第三步-验证nats"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三步-验证nats"}},[e._v("#")]),e._v(" 第三步：验证NATS")]),e._v(" "),a("p",[e._v("如果你用的是NATS server，请查看下面的示例程序来记录添加到NATS的存储桶通知。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('package main// Import Go and NATS packagesimport (    "log"    "runtime"    "github.com/nats-io/nats")func main() {    // Create server connection    natsConnection, _ := nats.Connect("nats://yourusername:yoursecret@localhost:4222")    log.Println("Connected")    // Subscribe to subject    log.Printf("Subscribing to subject \'bucketevents\'\\n")    natsConnection.Subscribe("bucketevents", func(msg *nats.Msg) {        // Handle the message        log.Printf("Received message \'%s\\n", string(msg.Data)+"\'")    })    // Keep the connection alive    runtime.Goexit()}\ngo run nats.go2016/10/12 06:39:18 Connected2016/10/12 06:39:18 Subscribing to subject \'bucketevents\'\n')])])]),a("p",[e._v("打开一个新的terminal终端并上传一张JPEG图片到"),a("code",[e._v("images")]),e._v(" 存储桶。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mc cp myphoto.jpg myminio/images\n")])])]),a("p",[a("code",[e._v("nats.go")]),e._v("示例程序将事件通知打印到控制台。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('go run nats.go2016/10/12 06:51:26 Connected2016/10/12 06:51:26 Subscribing to subject \'bucketevents\'2016/10/12 06:51:33 Received message \'{"EventType":"s3:ObjectCreated:Put","Key":"images/myphoto.jpg","Records":[{"eventVersion":"2.0","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2016-10-12T13:51:33Z","eventName":"s3:ObjectCreated:Put","userIdentity":{"principalId":"minio"},"requestParameters":{"sourceIPAddress":"[::1]:57106"},"responseElements":{},"s3":{"s3SchemaVersion":"1.0","configurationId":"Config","bucket":{"name":"images","ownerIdentity":{"principalId":"minio"},"arn":"arn:aws:s3:::images"},"object":{"key":"myphoto.jpg","size":56060,"eTag":"1d97bf45ecb37f7a7b699418070df08f","sequencer":"147CCD1AE054BFD0"}}}],"level":"info","msg":"","time":"2016-10-12T06:51:33-07:00"}\n')])])]),a("p",[e._v("如果你用的是NATS Streaming server,请查看下面的示例程序来记录添加到NATS的存储桶通知。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('package main// Import Go and NATS packagesimport (    "fmt"    "runtime"    "github.com/nats-io/go-nats-streaming")func main() {    natsConnection, _ := stan.Connect("test-cluster", "test-client")    log.Println("Connected")    // Subscribe to subject    log.Printf("Subscribing to subject \'bucketevents\'\\n")    natsConnection.Subscribe("bucketevents", func(m *stan.Msg) {        // Handle the message        fmt.Printf("Received a message: %s\\n", string(m.Data))    })    // Keep the connection alive    runtime.Goexit()}\ngo run nats.go2017/07/07 11:47:40 Connected2017/07/07 11:47:40 Subscribing to subject \'bucketevents\'\n')])])]),a("p",[e._v("打开一个新的terminal终端并上传一张JPEG图片到"),a("code",[e._v("images")]),e._v(" 存储桶。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mc cp myphoto.jpg myminio/images\n")])])]),a("p",[a("code",[e._v("nats.go")]),e._v("示例程序将事件通知打印到控制台。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('Received a message: {"EventType":"s3:ObjectCreated:Put","Key":"images/myphoto.jpg","Records":[{"eventVersion":"2.0","eventSource":"minio:s3","awsRegion":"","eventTime":"2017-07-07T18:46:37Z","eventName":"s3:ObjectCreated:Put","userIdentity":{"principalId":"minio"},"requestParameters":{"sourceIPAddress":"192.168.1.80:55328"},"responseElements":{"x-amz-request-id":"14CF20BD1EFD5B93","x-minio-origin-endpoint":"http://127.0.0.1:9000"},"s3":{"s3SchemaVersion":"1.0","configurationId":"Config","bucket":{"name":"images","ownerIdentity":{"principalId":"minio"},"arn":"arn:aws:s3:::images"},"object":{"key":"myphoto.jpg","size":248682,"eTag":"f1671feacb8bbf7b0397c6e9364e8c92","contentType":"image/jpeg","userDefined":{"content-type":"image/jpeg"},"versionId":"1","sequencer":"14CF20BD1EFD5B93"}},"source":{"host":"192.168.1.80","port":"55328","userAgent":"Minio (linux; amd64) minio-go/2.0.4 mc/DEVELOPMENT.GOGET"}}],"level":"info","msg":"","time":"2017-07-07T11:46:37-07:00"}\n')])])]),a("h2",{attrs:{id:"使用postgresql发布minio事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用postgresql发布minio事件"}},[e._v("#")]),e._v(" 使用PostgreSQL发布Minio事件")]),e._v(" "),a("p",[e._v("安装 "),a("a",{attrs:{href:"https://www.postgresql.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("PostgreSQL"),a("OutboundLink")],1),e._v(' 数据库。为了演示，我们将"postgres"用户的密码设为'),a("code",[e._v("password")]),e._v("，并且创建了一个"),a("code",[e._v("minio_events")]),e._v("数据库来存储事件信息。")]),e._v(" "),a("p",[e._v("这个通知目标支持两种格式: "),a("em",[e._v("namespace")]),e._v(" and "),a("em",[e._v("access")]),e._v("。")]),e._v(" "),a("p",[e._v("如果使用的是"),a("em",[e._v("namespace")]),e._v("格式，Minio将存储桶里的对象同步成数据库表中的行。每一行有两列：key和value。key是这个对象的存储桶名字加上对象名，value都是一个有关这个Minio对象的JSON格式的事件数据。如果对象更新或者删除，表中相应的行也会相应的更新或者删除。")]),e._v(" "),a("p",[e._v("如果使用的是"),a("em",[e._v("access")]),e._v(",Minio将将事件添加到表里，行有两列：event_time 和 event_data。event_time是事件在Minio server里发生的时间，event_data是有关这个Minio对象的JSON格式的事件数据。在这种格式下，不会有行会被删除或者修改。")]),e._v(" "),a("p",[e._v("下面的步骤展示的是如何在"),a("code",[e._v("namespace")]),e._v("格式下使用通知目标，"),a("code",[e._v("*access*")]),e._v("差不多，不再赘述，我相信你可以触类旁通，举一反三，不要让我失望哦。")]),e._v(" "),a("h3",{attrs:{id:"第一步-确保确保至少满足第低要求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一步-确保确保至少满足第低要求"}},[e._v("#")]),e._v(" 第一步：确保确保至少满足第低要求")]),e._v(" "),a("p",[e._v("Minio要求PostgresSQL9.5版本及以上。 Minio用了PostgreSQL9.5引入的"),a("a",{attrs:{href:"https://www.postgresql.org/docs/9.5/static/sql-insert.html#SQL-ON-CONFLICT",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("INSERT ON CONFLICT")]),a("OutboundLink")],1),e._v(" (aka UPSERT) 特性,以及9.4引入的 "),a("a",{attrs:{href:"https://www.postgresql.org/docs/9.4/static/datatype-json.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JSONB"),a("OutboundLink")],1),e._v(" 数据类型。")]),e._v(" "),a("h3",{attrs:{id:"第二步-集成postgresql到minio"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二步-集成postgresql到minio"}},[e._v("#")]),e._v(" 第二步：集成PostgreSQL到Minio")]),e._v(" "),a("p",[e._v("Minio Server的配置文件默认路径是 "),a("code",[e._v("~/.minio/config.json")]),e._v("。PostgreSQL配置信息是在"),a("code",[e._v("notify")]),e._v("这个节点下的"),a("code",[e._v("postgresql")]),e._v("节点下，在这里为你的PostgreSQL实例创建配置信息键值对，key是你的PostgreSQL的名称，value是下面表格中列列的键值对集合。")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[e._v("参数")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("类型")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("描述")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("enable")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("bool")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(必须)此配置是否启用")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("format")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(必须) 是 "),a("code",[e._v("namespace")]),e._v(" 还是 "),a("code",[e._v("access")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("connectionString")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(可选) PostgreSQL的"),a("a",{attrs:{href:"https://godoc.org/github.com/lib/pq#hdr-Connection_String_Parameters",target:"_blank",rel:"noopener noreferrer"}},[e._v("连接参数"),a("OutboundLink")],1),e._v(" 。比如可以用来设置 "),a("code",[e._v("sslmode")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("table")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(必须) 事件对应的表名，如果该表不存在，Mniio server会在启动时创建。")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("host")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(可选) PostgresSQL的主机名，默认是"),a("code",[e._v("localhost")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("port")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(可选) PostgreSQL的端口号，默认是"),a("code",[e._v("5432")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("user")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(可选)数据库用户名，默认是运行Minio server进程的用户")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("password")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(可选) 数据库密码")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("database")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(可选)库名")])])])]),e._v(" "),a("p",[e._v("下面是一个PostgreSQL配置示例:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"postgresql": {    "1": {        "enable": true,        "format": "namespace",        "connectionString": "sslmode=disable",        "table": "bucketevents",        "host": "127.0.0.1",        "port": "5432",        "user": "postgres",        "password": "password",        "database": "minio_events"    }}\n')])])]),a("p",[e._v("注意一下，为了演示，咱们这把SSL禁掉了，但是为了安全起见，不建议在生产环境这么弄。")]),e._v(" "),a("p",[e._v("更新完配置文件后，重启Minio Server让配置生效。如果一切顺利，Minio Server会在启动时输出一行信息，类似 "),a("code",[e._v("SQS ARNs: arn![:minio:](https://www.emoji-cheat-sheet.com/graphics/emojis/minio.png)sqs![:us-east-1:](https://www.emoji-cheat-sheet.com/graphics/emojis/us-east-1.png)1:postgresql")]),e._v("。")]),e._v(" "),a("p",[e._v("和之前描述的一样，你也可以添加多个PostreSQL实例，只要ID不重复就行。")]),e._v(" "),a("h3",{attrs:{id:"第三步-使用minio客户端启用bucket通知-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三步-使用minio客户端启用bucket通知-2"}},[e._v("#")]),e._v(" 第三步：使用Minio客户端启用bucket通知")]),e._v(" "),a("p",[e._v("我们现在可以在一个叫"),a("code",[e._v("images")]),e._v("的存储桶上开启事件通知，一旦上有文件上传到存储桶中，PostgreSQL中会insert一条新的记录或者一条已经存在的记录会被update，如果一个存在对象被删除，一条对应的记录也会从PostgreSQL表中删除。因此，PostgreSQL表中的行，对应的就是存储桶里的一个对象。")]),e._v(" "),a("p",[e._v("要配置这种存储桶通知，我们需要用到前面步骤中Minio输出的ARN信息。更多有关ARN的资料，请参考"),a("a",{attrs:{href:"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里"),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("p",[e._v("有了"),a("code",[e._v("mc")]),e._v("这个工具，这些配置信息很容易就能添加上。假设Minio服务别名叫"),a("code",[e._v("myminio")]),e._v(",可执行下列脚本：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# Create bucket named `images` in myminiomc mb myminio/images# Add notification configuration on the `images` bucket using the MySQL ARN. The --suffix argument filters events.mc events add myminio/images arn:minio:sqs:us-east-1:1:postgresql --suffix .jpg# Print out the notification configuration on the `images` bucket.mc events list myminio/imagesmc events list myminio/imagesarn:minio:sqs:us-east-1:1:postgresql s3:ObjectCreated:*,s3:ObjectRemoved:* Filter: suffix=”.jpg”\n")])])]),a("h3",{attrs:{id:"第四步-验证postgresql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四步-验证postgresql"}},[e._v("#")]),e._v(" 第四步：验证PostgreSQL")]),e._v(" "),a("p",[e._v("打开一个新的terminal终端并上传一张JPEG图片到"),a("code",[e._v("images")]),e._v(" 存储桶。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mc cp myphoto.jpg myminio/images\n")])])]),a("p",[e._v("打开一个PostgreSQL终端列出表 "),a("code",[e._v("bucketevents")]),e._v(" 中所有的记录。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('$ psql -h 127.0.0.1 -U postgres -d minio_eventsminio_events=# select * from bucketevents;key                 |                      valueimages/myphoto.jpg | {"Records": [{"s3": {"bucket": {"arn": "arn:aws:s3:::images", "name": "images", "ownerIdentity": {"principalId": "minio"}}, "object": {"key": "myphoto.jpg", "eTag": "1d97bf45ecb37f7a7b699418070df08f", "size": 56060, "sequencer": "147CE57C70B31931"}, "configurationId": "Config", "s3SchemaVersion": "1.0"}, "awsRegion": "us-east-1", "eventName": "s3:ObjectCreated:Put", "eventTime": "2016-10-12T21:18:20Z", "eventSource": "aws:s3", "eventVersion": "2.0", "userIdentity": {"principalId": "minio"}, "responseElements": {}, "requestParameters": {"sourceIPAddress": "[::1]:39706"}}]}(1 row)\n')])])]),a("h2",{attrs:{id:"使用mysql发布minio事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用mysql发布minio事件"}},[e._v("#")]),e._v(" 使用MySQL发布Minio事件")]),e._v(" "),a("p",[e._v("安装 "),a("a",{attrs:{href:"https://dev.mysql.com/downloads/mysql/",target:"_blank",rel:"noopener noreferrer"}},[e._v("MySQL"),a("OutboundLink")],1),e._v('. 为了演示，我们将"postgres"用户的密码设为'),a("code",[e._v("password")]),e._v("，并且创建了一个"),a("code",[e._v("miniodb")]),e._v("数据库来存储事件信息。")]),e._v(" "),a("p",[e._v("这个通知目标支持两种格式: "),a("em",[e._v("namespace")]),e._v(" and "),a("em",[e._v("access")]),e._v("。")]),e._v(" "),a("p",[e._v("如果使用的是"),a("em",[e._v("namespace")]),e._v("格式，Minio将存储桶里的对象同步成数据库表中的行。每一行有两列：key_name和value。key_name是这个对象的存储桶名字加上对象名，value都是一个有关这个Minio对象的JSON格式的事件数据。如果对象更新或者删除，表中相应的行也会相应的更新或者删除。")]),e._v(" "),a("p",[e._v("如果使用的是"),a("em",[e._v("access")]),e._v(",Minio将将事件添加到表里，行有两列：event_time 和 event_data。event_time是事件在Minio server里发生的时间，event_data是有关这个Minio对象的JSON格式的事件数据。在这种格式下，不会有行会被删除或者修改。")]),e._v(" "),a("p",[e._v("下面的步骤展示的是如何在"),a("code",[e._v("namespace")]),e._v("格式下使用通知目标，"),a("code",[e._v("*access*")]),e._v("差不多，不再赘述。")]),e._v(" "),a("h3",{attrs:{id:"第一步-确保确保至少满足第低要求-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一步-确保确保至少满足第低要求-2"}},[e._v("#")]),e._v(" 第一步：确保确保至少满足第低要求")]),e._v(" "),a("p",[e._v("Minio要求MySQL 版本 5.7.8及以上，Minio使用了MySQL5.7.8版本引入的 "),a("a",{attrs:{href:"https://dev.mysql.com/doc/refman/5.7/en/json.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JSON"),a("OutboundLink")],1),e._v(" 数据类型。我们使用的是MySQL5.7.17进行的测试。")]),e._v(" "),a("h3",{attrs:{id:"第二步-集成mysql到minio"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二步-集成mysql到minio"}},[e._v("#")]),e._v(" 第二步：集成MySQL到Minio")]),e._v(" "),a("p",[e._v("Minio Server的配置文件默认路径是 "),a("code",[e._v("~/.minio/config.json")]),e._v("。MySQL配置信息是在"),a("code",[e._v("notify")]),e._v("这个节点下的"),a("code",[e._v("mysql")]),e._v("节点下，在这里为你的MySQL实例创建配置信息键值对，key是你的PostgreSQL的名称，value是下面表格中列列的键值对集合。")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[e._v("参数")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("类型")]),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("描述")])])]),e._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("enable")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("bool")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(必须)此配置是否启用？")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("format")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(必须)是 "),a("code",[e._v("namespace")]),e._v(" 还是 "),a("code",[e._v("access")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("dsnString")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(可选)MySQL的 "),a("a",{attrs:{href:"https://github.com/go-sql-driver/mysql#dsn-data-source-name",target:"_blank",rel:"noopener noreferrer"}},[e._v("Data-Source-Name连接串"),a("OutboundLink")],1),e._v(" 。如果没设值，连接信息将使用下列参数： "),a("code",[e._v("host")]),e._v(", "),a("code",[e._v("port")]),e._v(", "),a("code",[e._v("user")]),e._v(", "),a("code",[e._v("password")]),e._v(" 以及 "),a("code",[e._v("database")])])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("table")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("(必须) 事件对应的表名，如果该表不存在，Mniio server会在启动时创建。")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("host")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("MySQL server主机名 (如果 "),a("code",[e._v("dsnString")]),e._v(" 是空才会使用此配置)。")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("port")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("MySQL server端口号 (如果 "),a("code",[e._v("dsnString")]),e._v(" 是空才会使用此配置)。")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("user")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("数据库用户名 (如果 "),a("code",[e._v("dsnString")]),e._v(" 是空才会使用此配置)。")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("password")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("数据库密码(如果 "),a("code",[e._v("dsnString")]),e._v(" 是空才会使用此配置)。")])]),e._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[e._v("database")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[a("em",[e._v("string")])]),e._v(" "),a("td",{staticStyle:{"text-align":"left"}},[e._v("数据库名(如果 "),a("code",[e._v("dsnString")]),e._v(" 是空才会使用此配置)。")])])])]),e._v(" "),a("p",[e._v("下面是一个MySQL配置示例:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"mysql": {        "1": {                "enable": true,                "dsnString": "",                "table": "minio_images",                "host": "172.17.0.1",                "port": "3306",                "user": "root",                "password": "password",                "database": "miniodb"        }}\n')])])]),a("p",[e._v("更新完配置文件后，重启Minio Server让配置生效。如果一切顺利，Minio Server会在启动时输出一行信息，类似 "),a("code",[e._v("SQS ARNs: arn![:minio:](https://www.emoji-cheat-sheet.com/graphics/emojis/minio.png)sqs![:us-east-1:](https://www.emoji-cheat-sheet.com/graphics/emojis/us-east-1.png)1:mysql")]),e._v("。")]),e._v(" "),a("p",[e._v("和之前描述的一样，你也可以添加多个MySQL实例，只要ID不重复就行。")]),e._v(" "),a("h3",{attrs:{id:"第三步-使用minio客户端启用bucket通知-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三步-使用minio客户端启用bucket通知-3"}},[e._v("#")]),e._v(" 第三步：使用Minio客户端启用bucket通知")]),e._v(" "),a("p",[e._v("我们现在可以在一个叫"),a("code",[e._v("images")]),e._v("的存储桶上开启事件通知，一旦上有文件上传到存储桶中，MySQL中会insert一条新的记录或者一条已经存在的记录会被update，如果一个存在对象被删除，一条对应的记录也会从MySQL表中删除。因此，MySQL表中的行，对应的就是存储桶里的一个对象。")]),e._v(" "),a("p",[e._v("要配置这种存储桶通知，我们需要用到前面步骤Minio输出的ARN信息。更多有关ARN的资料，请参考"),a("a",{attrs:{href:"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里"),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("p",[e._v("有了"),a("code",[e._v("mc")]),e._v("这个工具，这些配置信息很容易就能添加上。假设咱们的Minio服务别名叫"),a("code",[e._v("myminio")]),e._v(",可执行下列脚本：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("# Create bucket named `images` in myminiomc mb myminio/images# Add notification configuration on the `images` bucket using the MySQL ARN. The --suffix argument filters events.mc events add myminio/images arn:minio:sqs:us-east-1:1:postgresql --suffix .jpg# Print out the notification configuration on the `images` bucket.mc events list myminio/imagesarn:minio:sqs:us-east-1:1:postgresql s3:ObjectCreated:*,s3:ObjectRemoved:* Filter: suffix=”.jpg”\n")])])]),a("h3",{attrs:{id:"第四步-验证mysql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四步-验证mysql"}},[e._v("#")]),e._v(" 第四步：验证MySQL")]),e._v(" "),a("p",[e._v("打开一个新的terminal终端并上传一张JPEG图片到"),a("code",[e._v("images")]),e._v(" 存储桶。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mc cp myphoto.jpg myminio/images\n")])])]),a("p",[e._v("打开一个MySQL终端列出表 "),a("code",[e._v("minio_images")]),e._v(" 中所有的记录。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('$ mysql -h 172.17.0.1 -P 3306 -u root -p miniodbmysql> select * from minio_images| key_name           | value|| images/myphoto.jpg | {"Records": [{"s3": {"bucket": {"arn": "arn:aws:s3:::images", "name": "images", "ownerIdentity": {"principalId": "minio"}}, "object": {"key": "myphoto.jpg", "eTag": "467886be95c8ecfd71a2900e3f461b4f", "size": 26, "sequencer": "14AC59476F809FD3"}, "configurationId": "Config", "s3SchemaVersion": "1.0"}, "awsRegion": "us-east-1", "eventName": "s3:ObjectCreated:Put", "eventTime": "2017-03-16T11:29:00Z", "eventSource": "aws:s3", "eventVersion": "2.0", "userIdentity": {"principalId": "minio"}, "responseElements": {"x-amz-request-id": "14AC59476F809FD3", "x-minio-origin-endpoint": "http://192.168.86.110:9000"}, "requestParameters": {"sourceIPAddress": "127.0.0.1:38260"}}]} |row in set (0.01 sec)\n')])])]),a("h2",{attrs:{id:"使用kafka发布minio事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用kafka发布minio事件"}},[e._v("#")]),e._v(" 使用Kafka发布Minio事件")]),e._v(" "),a("p",[e._v("安装"),a("a",{attrs:{href:"http://kafka.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v(" Apache Kafka"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"第一步-确保确保至少满足第低要求-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一步-确保确保至少满足第低要求-3"}},[e._v("#")]),e._v(" 第一步：确保确保至少满足第低要求")]),e._v(" "),a("p",[e._v("Minio要求Kafka版本0.10或者0.9.Minio内部使用了 "),a("a",{attrs:{href:"https://github.com/Shopify/sarama/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Shopify/sarama"),a("OutboundLink")],1),e._v(" 库，因此需要和该库有同样的版本兼容性。")]),e._v(" "),a("h3",{attrs:{id:"第二步-集成kafka到minio"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二步-集成kafka到minio"}},[e._v("#")]),e._v(" 第二步：集成Kafka到Minio")]),e._v(" "),a("p",[e._v("Minio Server的配置文件默认路径是 "),a("code",[e._v("~/.minio/config.json")]),e._v("。参考下面的示例更新Kafka配置：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"kafka": {    "1": {        "enable": true,        "brokers": ["localhost:9092"],        "topic": "bucketevents"    }}\n')])])]),a("p",[e._v("重启Minio server让配置生效。"),a("code",[e._v("bucketevents")]),e._v("是本示例用到的Kafka主题（topic）。")]),e._v(" "),a("h3",{attrs:{id:"第三步-使用minio客户端启用bucket通知-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三步-使用minio客户端启用bucket通知-4"}},[e._v("#")]),e._v(" 第三步：使用Minio客户端启用bucket通知")]),e._v(" "),a("p",[e._v("我们现在可以在一个叫"),a("code",[e._v("images")]),e._v("的存储桶上开启事件通知，一旦上有文件上传到存储桶中，事件将被触发。在这里，ARN的值是"),a("code",[e._v("arn![:minio:](https://www.emoji-cheat-sheet.com/graphics/emojis/minio.png)sqs![:us-east-1:](https://www.emoji-cheat-sheet.com/graphics/emojis/us-east-1.png)1:kafka")]),e._v("。更多有关ARN的资料，请参考"),a("a",{attrs:{href:"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里"),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mc mb myminio/imagesmc events add  myminio/images arn:minio:sqs:us-east-1:1:kafka --suffix .jpgmc events list myminio/imagesarn:minio:sqs:us-east-1:1:kafka s3:ObjectCreated:*,s3:ObjectRemoved:* Filter: suffix=”.jpg”\n")])])]),a("h3",{attrs:{id:"第四步-验证kafka"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第四步-验证kafka"}},[e._v("#")]),e._v(" 第四步：验证Kafka")]),e._v(" "),a("p",[e._v("我们使用 "),a("a",{attrs:{href:"https://github.com/edenhill/kafkacat",target:"_blank",rel:"noopener noreferrer"}},[e._v("kafkacat"),a("OutboundLink")],1),e._v(" 将所有的通知输出到控制台。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("kafkacat -C -b localhost:9092 -t bucketevents\n")])])]),a("p",[e._v("打开一个新的terminal终端并上传一张JPEG图片到"),a("code",[e._v("images")]),e._v(" 存储桶。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mc cp myphoto.jpg myminio/images\n")])])]),a("p",[a("code",[e._v("kafkacat")]),e._v(" 输出事件通知到控制台。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('kafkacat -b localhost:9092 -t bucketevents{"EventType":"s3:ObjectCreated:Put","Key":"images/myphoto.jpg","Records":[{"eventVersion":"2.0","eventSource":"aws:s3","awsRegion":"us-east-1","eventTime":"2017-01-31T10:01:51Z","eventName":"s3:ObjectCreated:Put","userIdentity":{"principalId":"88QR09S7IOT4X1IBAQ9B"},"requestParameters":{"sourceIPAddress":"192.173.5.2:57904"},"responseElements":{"x-amz-request-id":"149ED2FD25589220","x-minio-origin-endpoint":"http://192.173.5.2:9000"},"s3":{"s3SchemaVersion":"1.0","configurationId":"Config","bucket":{"name":"images","ownerIdentity":{"principalId":"88QR09S7IOT4X1IBAQ9B"},"arn":"arn:aws:s3:::images"},"object":{"key":"myphoto.jpg","size":541596,"eTag":"04451d05b4faf4d62f3d538156115e2a","sequencer":"149ED2FD25589220"}}}],"level":"info","msg":"","time":"2017-01-31T15:31:51+05:30"}\n')])])]),a("h2",{attrs:{id:"使用webhook发布minio事件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用webhook发布minio事件"}},[e._v("#")]),e._v(" 使用Webhook发布Minio事件")]),e._v(" "),a("p",[a("a",{attrs:{href:"https://en.wikipedia.org/wiki/Webhook",target:"_blank",rel:"noopener noreferrer"}},[e._v("Webhooks"),a("OutboundLink")],1),e._v(" 采用推的方式获取数据，而不是一直去拉取。")]),e._v(" "),a("h3",{attrs:{id:"第一步-集成mysql到minio"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一步-集成mysql到minio"}},[e._v("#")]),e._v(" 第一步：集成MySQL到Minio")]),e._v(" "),a("p",[e._v("Minio Server的配置文件默认路径是 "),a("code",[e._v("~/.minio/config.json")]),e._v("。参考下面的示例更新Webhook配置：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('"webhook": {  "1": {    "enable": true,    "endpoint": "http://localhost:3000/"}\n')])])]),a("p",[e._v("endpoint是监听webhook通知的服务。保存配置文件并重启Minio服务让配配置生效。注意一下，在重启Minio时，这个endpoint必须是启动并且可访问到。")]),e._v(" "),a("h3",{attrs:{id:"第二步-使用minio客户端启用bucket通知-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二步-使用minio客户端启用bucket通知-5"}},[e._v("#")]),e._v(" 第二步：使用Minio客户端启用bucket通知")]),e._v(" "),a("p",[e._v("我们现在可以在一个叫"),a("code",[e._v("images")]),e._v("的存储桶上开启事件通知，一旦上有文件上传到存储桶中，事件将被触发。在这里，ARN的值是"),a("code",[e._v("arn![:minio:](https://www.emoji-cheat-sheet.com/graphics/emojis/minio.png)sqs![:us-east-1:](https://www.emoji-cheat-sheet.com/graphics/emojis/us-east-1.png)1:webhook")]),e._v("。更多有关ARN的资料，请参考"),a("a",{attrs:{href:"http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里"),a("OutboundLink")],1),e._v("。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mc mb myminio/imagesmc mb myminio/images-thumbnailmc events add myminio/images arn:minio:sqs:us-east-1:1:webhook --events put --suffix .jpg\n")])])]),a("p",[e._v("验证事件通知是否配置正确：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mc events list myminio/images\n")])])]),a("p",[e._v("你应该可以收到如下的响应：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('arn:minio:sqs:us-east-1:1:webhook   s3:ObjectCreated:*   Filter: suffix=".jpg"\n')])])]),a("h3",{attrs:{id:"第三步-采用thumbnailer进行验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第三步-采用thumbnailer进行验证"}},[e._v("#")]),e._v(" 第三步：采用Thumbnailer进行验证")]),e._v(" "),a("p",[e._v("我们使用 "),a("a",{attrs:{href:"https://github.com/minio/thumbnailer",target:"_blank",rel:"noopener noreferrer"}},[e._v("Thumbnailer"),a("OutboundLink")],1),e._v(" 来监听Minio通知。如果有文件上传于是Minio服务，Thumnailer监听到该通知，生成一个缩略图并上传到Minio服务。安装Thumbnailer:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("git clone https://github.com/minio/thumbnailer/npm install\n")])])]),a("p",[e._v("然后打开Thumbnailer的"),a("code",[e._v("config/webhook.json")]),e._v("配置文件，添加有关Minio server的配置，使用下面的方式启动Thumbnailer:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("NODE_ENV=webhook node thumbnail-webhook.js\n")])])]),a("p",[e._v("Thumbnailer运行在"),a("code",[e._v("http://localhost:3000/")]),e._v("。下一步，配置Minio server,让其发送消息到这个URL（第一步提到的），并使用 "),a("code",[e._v("mc")]),e._v(" 来设置存储桶通知（第二步提到的）。然后上传一张图片到Minio server:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mc cp ~/images.jpg myminio/images.../images.jpg:  8.31 KB / 8.31 KB ┃▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓┃ 100.00% 59.42 KB/s 0s\n")])])]),a("p",[e._v("稍等片刻，然后使用mc ls检查存储桶的内容 -，你将看到有个缩略图出现了。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("mc ls myminio/images-thumbnail[2017-02-08 11:39:40 IST]   992B images-thumbnail.jpg\n")])])]),a("p",[a("em",[e._v("注意")]),e._v(" 如果你用的是 "),a("a",{attrs:{href:"https://docs.min.io/docs/distributed-minio-quickstart-guide",target:"_blank",rel:"noopener noreferrer"}},[e._v("distributed Minio"),a("OutboundLink")],1),e._v(",请修改所有节点的 "),a("code",[e._v("~/.minio/config.json")]),e._v("。")]),e._v(" "),a("blockquote",[a("p",[e._v("原文: https://docs.min.io/docs/minio-bucket-notification-guide.html")])])])}),[],!1,null,null,null);t.default=i.exports}}]);