(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{553:function(t,s,e){"use strict";e.r(s);var a=e(29),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"nginx-开启gzip压缩"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nginx-开启gzip压缩"}},[t._v("#")]),t._v(" Nginx 开启gzip压缩")]),t._v(" "),e("h2",{attrs:{id:"使用范例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用范例"}},[t._v("#")]),t._v(" 使用范例")]),t._v(" "),e("p",[t._v("这个模块支持在线实时压缩输出数据流，nginx.conf中关于gzip压缩的主要配置如下：")]),t._v(" "),e("div",{staticClass:"language-nginx extra-class"},[e("pre",{pre:!0,attrs:{class:"language-nginx"}},[e("code",[e("span",{pre:!0,attrs:{class:"token directive"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t......\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开启和关闭gzip模式")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token directive"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#gizp压缩起点，文件大于1k才进行压缩")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token directive"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_min_length")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1k")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gzip 压缩级别，1-9，数字越大压缩的越好，也越占用CPU时间")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token directive"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_comp_level")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进行压缩的文件类型。")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token directive"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_types")]),t._v(" text/plain application/javascript application/x-javascript text/css application/xml text/xml text/javascript application/json image/png image/gif image/jpeg")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#nginx对于静态文件的处理模块，开启后会寻找以.gz结尾的文件，直接返回，不会占用cpu进行压缩，如果找不到则不进行压缩")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gzip_static on|off")]),t._v("\n    \n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否在http header中添加Vary: Accept-Encoding，建议开启")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token directive"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_vary")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置压缩所需要的缓冲区大小，以4k为单位，如果文件为7k则申请2*4k的缓冲区 ")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token directive"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_buffers")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("16k")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置gzip压缩针对的HTTP协议版本")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gzip_http_version 1.1;")]),t._v("\n\t......\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("内置变量 $gzip_ratio 可以获取到gzip的压缩比率")])]),t._v(" "),e("h2",{attrs:{id:"指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指令"}},[t._v("#")]),t._v(" 指令")]),t._v(" "),e("ul",[e("li",[t._v("[#gzip gzip]")]),t._v(" "),e("li",[t._v("[#gzip_buffers gzip_buffers]")]),t._v(" "),e("li",[t._v("[#gzip_comp_level gzip_comp_level]")]),t._v(" "),e("li",[t._v("[#gzip_min_length gzip_min_length]")]),t._v(" "),e("li",[t._v("[#gzip_http_version gzip_http_version]")]),t._v(" "),e("li",[t._v("[#gzip_proxied gzip_proxied]")]),t._v(" "),e("li",[t._v("[#gzip_types gzip_types]")])]),t._v(" "),e("h2",{attrs:{id:"gzip"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gzip"}},[t._v("#")]),t._v(" gzip")]),t._v(" "),e("p",[e("strong",[t._v("语法:")]),t._v(" gzip on|off")]),t._v(" "),e("p",[e("strong",[t._v("默认值:")]),t._v(" gzip off")]),t._v(" "),e("p",[e("strong",[t._v("作用域:")]),t._v(" http, server, location, if (x) location")]),t._v(" "),e("p",[t._v("开启或者关闭gzip模块")]),t._v(" "),e("h2",{attrs:{id:"gzip-buffers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gzip-buffers"}},[t._v("#")]),t._v(" gzip_buffers")]),t._v(" "),e("p",[e("strong",[t._v("语法:")]),t._v(" gzip_buffers number size")]),t._v(" "),e("p",[e("strong",[t._v("默认值:")]),t._v(" gzip_buffers 4 4k/8k")]),t._v(" "),e("p",[e("strong",[t._v("作用域:")]),t._v(" http, server, location")]),t._v(" "),e("p",[t._v("设置系统获取几个单位的缓存用于存储gzip的压缩结果数据流。 例如 4 4k 代表以4k为单位，按照原始数据大小以4k为单位的4倍申请内存。 4 8k 代表以8k为单位，按照原始数据大小以8k为单位的4倍申请内存。")]),t._v(" "),e("p",[t._v("如果没有设置，默认值是申请跟原始数据相同大小的内存空间去存储gzip压缩结果。")]),t._v(" "),e("h2",{attrs:{id:"gzip-comp-level"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gzip-comp-level"}},[t._v("#")]),t._v(" gzip_comp_level")]),t._v(" "),e("p",[e("strong",[t._v("语法:")]),t._v(" gzip_comp_level 1..9")]),t._v(" "),e("p",[e("strong",[t._v("默认值:")]),t._v(" gzip_comp_level 1")]),t._v(" "),e("p",[e("strong",[t._v("作用域:")]),t._v(" http, server, location")]),t._v(" "),e("p",[t._v("gzip压缩比，1 压缩比最小处理速度最快，9 压缩比最大但处理最慢（传输快但比较消耗cpu）。")]),t._v(" "),e("h2",{attrs:{id:"gzip-min-length"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gzip-min-length"}},[t._v("#")]),t._v(" gzip_min_length")]),t._v(" "),e("p",[e("strong",[t._v("语法:")]),t._v(" gzip_min_length length")]),t._v(" "),e("p",[e("strong",[t._v("默认值:")]),t._v(" gzip_min_length 0")]),t._v(" "),e("p",[e("strong",[t._v("作用域:")]),t._v(" http, server, location")]),t._v(" "),e("p",[t._v("设置允许压缩的页面最小字节数，页面字节数从header头中的Content-Length中进行获取。")]),t._v(" "),e("p",[t._v("默认值是0，不管页面多大都压缩。")]),t._v(" "),e("p",[t._v("建议设置成大于1k的字节数，小于1k可能会越压越大。 即: gzip_min_length 1024")]),t._v(" "),e("h2",{attrs:{id:"gzip-http-version"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gzip-http-version"}},[t._v("#")]),t._v(" gzip_http_version")]),t._v(" "),e("p",[e("strong",[t._v("语法:")]),t._v(" gzip_http_version 1.0|1.1")]),t._v(" "),e("p",[e("strong",[t._v("默认值:")]),t._v(" gzip_http_version 1.1")]),t._v(" "),e("p",[e("strong",[t._v("作用域:")]),t._v(" http, server, location")]),t._v(" "),e("p",[t._v("识别http的协议版本。由于早期的一些浏览器或者http客户端，可能不支持gzip自解压，用户就会看到乱码，所以做一些判断还是有必要的。 注：21世纪都来了，现在除了类似于百度的蜘蛛之类的东西不支持自解压，99.99%的浏览器基本上都支持gzip解压了，所以可以不用设这个值,保持系统默认即可。")]),t._v(" "),e("h2",{attrs:{id:"gzip-proxied"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gzip-proxied"}},[t._v("#")]),t._v(" gzip_proxied")]),t._v(" "),e("p",[e("strong",[t._v("语法:")]),t._v(" gzip_proxied [off|expired|no-cache|no-store|private|no_last_modified|no_etag|auth|any] ...")]),t._v(" "),e("p",[e("strong",[t._v("默认值:")]),t._v(" gzip_proxied off")]),t._v(" "),e("p",[e("strong",[t._v("作用域:")]),t._v(" http, server, location")]),t._v(" "),e("p",[t._v('Nginx作为反向代理的时候启用，开启或者关闭后端服务器返回的结果，匹配的前提是后端服务器必须要返回包含"Via"的 header头。')]),t._v(" "),e("ul",[e("li",[t._v("off - 关闭所有的代理结果数据的压缩")]),t._v(" "),e("li",[t._v('expired - 启用压缩，如果header头中包含 "Expires" 头信息')]),t._v(" "),e("li",[t._v('no-cache - 启用压缩，如果header头中包含 "Cache-Control:no-cache" 头信息')]),t._v(" "),e("li",[t._v('no-store - 启用压缩，如果header头中包含 "Cache-Control:no-store" 头信息')]),t._v(" "),e("li",[t._v('private - 启用压缩，如果header头中包含 "Cache-Control:private" 头信息')]),t._v(" "),e("li",[t._v('no_last_modified - 启用压缩,如果header头中不包含 "Last-Modified" 头信息')]),t._v(" "),e("li",[t._v('no_etag - 启用压缩 ,如果header头中不包含 "ETag" 头信息')]),t._v(" "),e("li",[t._v('auth - 启用压缩 , 如果header头中包含 "Authorization" 头信息')]),t._v(" "),e("li",[t._v("any - 无条件启用压缩")])]),t._v(" "),e("h2",{attrs:{id:"gzip-types"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gzip-types"}},[t._v("#")]),t._v(" gzip_types")]),t._v(" "),e("p",[e("strong",[t._v("语法:")]),t._v(" gzip_types mime-type [mime-type ...]")]),t._v(" "),e("p",[e("strong",[t._v("默认值:")]),t._v(" gzip_types text/html")]),t._v(" "),e("p",[e("strong",[t._v("作用域:")]),t._v(" http, server, location")]),t._v(" "),e("p",[t._v('匹配MIME类型进行压缩，（无论是否指定）"text/html"类型总是会被压缩的。')]),t._v(" "),e("p",[t._v("注意：如果作为http server来使用，主配置文件中要包含文件类型配置文件")]),t._v(" "),e("div",{staticClass:"language-nginx extra-class"},[e("pre",{pre:!0,attrs:{class:"language-nginx"}},[e("code",[e("span",{pre:!0,attrs:{class:"token directive"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token directive"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v("       conf/mime.types")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t......\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("如果你希望压缩常规的文件类型，可以写成这个样子")]),t._v(" "),e("div",{staticClass:"language-nginx extra-class"},[e("pre",{pre:!0,attrs:{class:"language-nginx"}},[e("code",[e("span",{pre:!0,attrs:{class:"token directive"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")])]),t._v(" \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n: "),e("span",{pre:!0,attrs:{class:"token directive"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("include")]),t._v("       conf/mime.types")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n: "),e("span",{pre:!0,attrs:{class:"token directive"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n: "),e("span",{pre:!0,attrs:{class:"token directive"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_min_length")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n: "),e("span",{pre:!0,attrs:{class:"token directive"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_buffers")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8k")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   \n: "),e("span",{pre:!0,attrs:{class:"token directive"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_http_version")]),t._v(" 1.1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n: "),e("span",{pre:!0,attrs:{class:"token directive"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("gzip_types")]),t._v("       text/plain application/x-javascript text/css text/html application/xml")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n: ......\t\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"references"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#references"}},[t._v("#")]),t._v(" References")]),t._v(" "),e("p",[e("a",{attrs:{href:"http://nginx.org/en/docs/http/ngx_http_gzip_module.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("原始文档"),e("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);