(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{621:function(t,a,s){"use strict";s.r(a);var e=s(29),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"docker-进入容器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#docker-进入容器"}},[t._v("#")]),t._v(" Docker 进入容器")]),t._v(" "),s("p",[t._v("在使用 "),s("code",[t._v("-d")]),t._v(" 参数时，容器启动后会进入后台。")]),t._v(" "),s("p",[t._v("某些时候需要进入容器进行操作，包括使用 "),s("code",[t._v("docker attach")]),t._v(" 命令或 "),s("code",[t._v("docker exec")]),t._v(" 命令，推荐大家使用 "),s("code",[t._v("docker exec")]),t._v(" 命令，原因会在下面说明。")]),t._v(" "),s("h2",{attrs:{id:"attach-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#attach-命令"}},[t._v("#")]),t._v(" "),s("code",[t._v("attach")]),t._v(" 命令")]),t._v(" "),s("p",[s("code",[t._v("docker attach")]),t._v(" 是 Docker 自带的命令。下面示例如何使用该命令。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run -dit ubuntu\n243c32535da7d142fb0e6df616a3c3ada0b8ab417937c853a9e1c251f499f550\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" container "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\n243c32535da7        ubuntu:latest       "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/bash"')]),t._v("         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" seconds ago      Up "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(" seconds                           nostalgic_hypatia\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" attach 243c\nroot@243c32535da7:/"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])])]),s("p",[s("em",[t._v("注意：")]),t._v(" 如果从这个 stdin 中 exit，会导致容器的停止。")]),t._v(" "),s("h2",{attrs:{id:"exec-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exec-命令"}},[t._v("#")]),t._v(" "),s("code",[t._v("exec")]),t._v(" 命令")]),t._v(" "),s("h3",{attrs:{id:"i-t-参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#i-t-参数"}},[t._v("#")]),t._v(" -i -t 参数")]),t._v(" "),s("p",[s("code",[t._v("docker exec")]),t._v(" 后边可以跟多个参数，这里主要说明 "),s("code",[t._v("-i")]),t._v(" "),s("code",[t._v("-t")]),t._v(" 参数。")]),t._v(" "),s("p",[t._v("只用 "),s("code",[t._v("-i")]),t._v(" 参数时，由于没有分配伪终端，界面没有我们熟悉的 Linux 命令提示符，但命令执行结果仍然可以返回。")]),t._v(" "),s("p",[t._v("当 "),s("code",[t._v("-i")]),t._v(" "),s("code",[t._v("-t")]),t._v(" 参数一起使用时，则可以看到我们熟悉的 Linux 命令提示符。")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run -dit ubuntu\n69d137adef7a8a689cbcb059e94da5489d3cddd240ff675c640c8d96e84fe1f6\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" container "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\n69d137adef7a        ubuntu:latest       "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/bin/bash"')]),t._v("         "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" seconds ago      Up "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(" seconds                           zealous_swirles\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -i 69d1 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ls")]),t._v("\nbin\nboot\ndev\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" -it 69d1 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\nroot@69d137adef7a:/"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])])]),s("p",[t._v("如果从这个 stdin 中 exit，不会导致容器的停止。这就是为什么推荐大家使用 "),s("code",[t._v("docker exec")]),t._v(" 的原因。")]),t._v(" "),s("p",[t._v("更多参数说明请使用 "),s("code",[t._v("docker exec --help")]),t._v(" 查看。")])])}),[],!1,null,null,null);a.default=n.exports}}]);