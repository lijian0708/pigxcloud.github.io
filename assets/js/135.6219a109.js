(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{603:function(t,a,e){"use strict";e.r(a);var s=e(29),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"centos-安装-docker"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#centos-安装-docker"}},[t._v("#")]),t._v(" CentOS 安装 Docker")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),e("p",[t._v("切勿在没有配置 Docker YUM 源的情况下直接使用 yum 命令安装 Docker.")])]),t._v(" "),e("h2",{attrs:{id:"前提条件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前提条件"}},[t._v("#")]),t._v(" 前提条件")]),t._v(" "),e("h3",{attrs:{id:"操作系统要求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#操作系统要求"}},[t._v("#")]),t._v(" 操作系统要求")]),t._v(" "),e("p",[t._v("要安装Docker Engine-Community，您需要一个CentOS 7的维护版本。不支持或未测试存档版本。该"),e("code",[t._v("centos-extras")]),t._v("库必须启用。默认情况下，此存储库是启用的，但是如果已禁用它，则需要 "),e("a",{attrs:{href:"https://wiki.centos.org/AdditionalResources/Repositories",target:"_blank",rel:"noopener noreferrer"}},[t._v("重新启用它"),e("OutboundLink")],1),t._v("。"),e("code",[t._v("overlay2")]),t._v("建议使用存储驱动程序。")]),t._v(" "),e("h3",{attrs:{id:"卸载旧版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#卸载旧版本"}},[t._v("#")]),t._v(" 卸载旧版本")]),t._v(" "),e("p",[t._v("旧版本的 Docker 称为 "),e("code",[t._v("docker")]),t._v(" 或者 "),e("code",[t._v("docker-engine")]),t._v("，使用以下命令卸载旧版本：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum remove "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n                  docker-client "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n                  docker-client-latest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n                  docker-common "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n                  docker-latest "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n                  docker-latest-logrotate "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n                  docker-logrotate "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n                  docker-engine\n")])])]),e("h2",{attrs:{id:"使用-yum-安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用-yum-安装"}},[t._v("#")]),t._v(" 使用 yum 安装")]),t._v(" "),e("p",[t._v("在新主机上首次安装Docker Engine-Community之前，需要设置Docker存储库。之后，您可以从存储库安装和更新Docker。")]),t._v(" "),e("h3",{attrs:{id:"设置存储库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#设置存储库"}},[t._v("#")]),t._v(" 设置存储库")]),t._v(" "),e("p",[t._v("1.安装所需的软件包。"),e("code",[t._v("yum-utils")]),t._v("提供了"),e("code",[t._v("yum-config-manager")]),t._v(" 效用，并"),e("code",[t._v("device-mapper-persistent-data")]),t._v("和"),e("code",[t._v("lvm2")]),t._v("由需要"),e("code",[t._v("devicemapper")]),t._v("存储驱动程序。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y yum-utils "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n           device-mapper-persistent-data "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n           lvm2\n")])])]),e("p",[t._v("2.使用以下命令来设置稳定的存储库。")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),e("p",[t._v("鉴于国内网络问题，强烈建议使用国内源，官方源请在注释中查看。")])]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 阿里源")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum-config-manager "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --add-repo "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 官方源")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sudo yum-config-manager \\")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     --add-repo \\")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     https://download.docker.com/linux/centos/docker-ce.repo    ")]),t._v("\n")])])]),e("p",[t._v("如果需要最新版本的 Docker CE 请使用以下命令：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum-config-manager --enable docker-ce-edge\n")])])]),e("p",[t._v("如果需要测试版本的 Docker CE 请使用以下命令：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum-config-manager --enable docker-ce-test\n")])])]),e("h3",{attrs:{id:"安装-docker-engine-community"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装-docker-engine-community"}},[t._v("#")]),t._v(" 安装 Docker Engine-Community")]),t._v(" "),e("p",[t._v("安装最新版本的"),e("code",[t._v("Docker Engine-Community")]),t._v("和"),e("code",[t._v("containerd")]),t._v("，或者转到下一步安装特定版本：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" yum "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" docker-ce docker-ce-cli containerd.io\n")])])]),e("p",[t._v("如果提示您接受GPG密钥，请验证指纹是否匹配 "),e("code",[t._v("060A 61C5 1B55 8A7F 742B 77AA C52F EB6B 621E 9F35")]),t._v("，如果是，则接受它。")]),t._v(" "),e("div",{staticClass:"custom-block warning"},[e("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),e("p",[t._v("有多个Docker存储库吗？\n如果您启用了多个Docker存储库，则在未在"),e("code",[t._v("yum installor")]),t._v("或"),e("code",[t._v("yum update")]),t._v("命令中指定版本的情况下进行安装或更新将始终安装可能的最高版本，这可能不适合您的稳定性需求。")])]),t._v(" "),e("p",[t._v("Docker已安装但尚未启动。"),e("code",[t._v("docker")]),t._v("创建该组，但没有用户添加到该组。")]),t._v(" "),e("h2",{attrs:{id:"启动-docker-ce"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#启动-docker-ce"}},[t._v("#")]),t._v(" 启动 Docker CE")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("\n")])])]),e("h2",{attrs:{id:"开机自启动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#开机自启动"}},[t._v("#")]),t._v(" 开机自启动")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("\n")])])]),e("h2",{attrs:{id:"建立-docker-用户组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#建立-docker-用户组"}},[t._v("#")]),t._v(" 建立 docker 用户组")]),t._v(" "),e("p",[t._v("默认情况下，"),e("code",[t._v("docker")]),t._v(" 命令会使用 "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Unix_domain_socket",target:"_blank",rel:"noopener noreferrer"}},[t._v("Unix socket"),e("OutboundLink")],1),t._v(" 与 Docker 引擎通讯。而只有 "),e("code",[t._v("root")]),t._v(" 用户和 "),e("code",[t._v("docker")]),t._v(" 组的用户才可以访问 Docker 引擎的 Unix socket。出于安全考虑，一般 Linux 系统上不会直接使用 "),e("code",[t._v("root")]),t._v(" 用户。因此，更好地做法是将需要使用 "),e("code",[t._v("docker")]),t._v(" 的用户加入 "),e("code",[t._v("docker")]),t._v(" 用户组。")]),t._v(" "),e("p",[t._v("建立 "),e("code",[t._v("docker")]),t._v(" 组：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("groupadd")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("\n")])])]),e("p",[t._v("将当前用户加入 "),e("code",[t._v("docker")]),t._v(" 组：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("usermod")]),t._v(" -aG "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$USER")]),t._v("\n")])])]),e("p",[t._v("退出当前终端并重新登录，进行如下测试。")]),t._v(" "),e("h2",{attrs:{id:"测试-docker-是否安装正确"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试-docker-是否安装正确"}},[t._v("#")]),t._v(" 测试 Docker 是否安装正确")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run hello-world\n\nUnable to "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" image "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello-world:latest'")]),t._v(" locally\nlatest: Pulling from library/hello-world\nca4f61b1923c: Pull complete\nDigest: sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c\nStatus: Downloaded newer image "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" hello-world:latest\n\nHello from Docker"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\nThis message shows that your installation appears to be working correctly.\n\nTo generate this message, Docker took the following steps:\n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(". The Docker client contacted the Docker daemon.\n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(". The Docker daemon pulled the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello-world"')]),t._v(" image from the Docker Hub.\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("amd64"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(". The Docker daemon created a new container from that image "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" runs the\n    executable that produces the output you are currently reading.\n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(". The Docker daemon streamed that output to the Docker client, "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" sent it\n    to your terminal.\n\nTo try something "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" ambitious, you can run an Ubuntu container with:\n "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run -it ubuntu "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n\nShare images, automate workflows, and "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" with a "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v(" Docker ID:\n https://cloud.docker.com/\n\nFor "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" examples and ideas, visit:\n https://docs.docker.com/engine/userguide/\n")])])]),e("p",[t._v("若能正常输出以上信息，则说明安装成功。")]),t._v(" "),e("h2",{attrs:{id:"镜像加速"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#镜像加速"}},[t._v("#")]),t._v(" 镜像加速")]),t._v(" "),e("p",[t._v("鉴于国内网络问题，后续拉取 Docker 镜像十分缓慢，强烈建议安装 Docker 之后配置 "),e("code",[t._v("国内镜像加速")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"添加内核参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#添加内核参数"}},[t._v("#")]),t._v(" 添加内核参数")]),t._v(" "),e("p",[t._v("默认配置下，如果在 CentOS 使用 Docker CE 看到下面的这些警告信息：")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("WARNING: bridge-nf-call-iptables is disabled\nWARNING: bridge-nf-call-ip6tables is disabled\n")])])]),e("p",[t._v("请添加内核配置参数以启用这些功能。")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("tee")]),t._v(" -a /etc/sysctl.conf "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<-")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("EOF\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nEOF")]),t._v("\n")])])]),e("p",[t._v("然后重新加载 "),e("code",[t._v("sysctl.conf")]),t._v(" 即可")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" sysctl -p\n")])])]),e("h2",{attrs:{id:"参考文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[t._v("#")]),t._v(" 参考文档")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://docs.docker.com/install/linux/docker-ce/centos/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker 官方 CentOS 安装文档"),e("OutboundLink")],1),t._v("。")])])])}),[],!1,null,null,null);a.default=n.exports}}]);