(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{546:function(t,a,r){"use strict";r.r(a);var s=r(29),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"部署-harbor-企业级registry服务器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#部署-harbor-企业级registry服务器"}},[t._v("#")]),t._v(" 部署 Harbor 企业级Registry服务器")]),t._v(" "),r("h2",{attrs:{id:"harbor-简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#harbor-简介"}},[t._v("#")]),t._v(" Harbor 简介")]),t._v(" "),r("p",[r("img",{attrs:{src:"/img/harbor_logo.png",alt:"harbor_logo"}})]),t._v(" "),r("p",[t._v("Harbor是一个用于存储和分发Docker镜像的企业级Registry服务器，通过添加一些企业必需的功能特性，例如安全、标识和管理等，扩展了开源Docker Distribution。作为一个企业级私有Registry服务器，Harbor提供了更好的性能和安全。提升用户使用Registry构建和运行环境传输镜像的效率。Harbor支持安装在多个Registry节点的镜像资源复制，镜像全部保存在私有Registry中， 确保数据和知识产权在公司内部网络中管控。另外，Harbor也提供了高级的安全特性，诸如用户管理，访问控制和活动审计等。")]),t._v(" "),r("h2",{attrs:{id:"harbor-特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#harbor-特性"}},[t._v("#")]),t._v(" Harbor 特性")]),t._v(" "),r("ul",[r("li",[r("p",[r("strong",[t._v("基于角色的访问控制")]),t._v("：用户与Docker镜像仓库通过“项目”进行组织管理，一个用户可以对多个镜像仓库在同一命名空间（project）里有不同的权限。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("镜像复制")]),t._v("：镜像可以在多个Registry实例中复制（同步）。尤其适合于负载均衡，高可用，混合云和多云的场景。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("图形化用户界面")]),t._v("：用户可以通过浏览器来浏览，检索当前Docker镜像仓库，管理项目和命名空间。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("AD/LDAP 支持")]),t._v("：Harbor可以集成企业内部已有的AD/LDAP，用于鉴权认证管理。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("审计管理")]),t._v("：所有针对镜像仓库的操作都可以被记录追溯，用于审计管理。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("国际化")]),t._v("：已拥有英文、中文、德文、日文和俄文的本地化版本。更多的语言将会添加进来。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("RESTful API")]),t._v("：RESTful API 提供给管理员对于Harbor更多的操控, 使得与其它管理软件集成变得更容易。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("部署简单")]),t._v("： 提供在线和离线两种安装工具， 也可以安装到vSphere平台(OVA方式)虚拟设备。")])])]),t._v(" "),r("h2",{attrs:{id:"harbor-组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#harbor-组件"}},[t._v("#")]),t._v(" Harbor 组件")]),t._v(" "),r("p",[t._v("Harbor在架构上主要由6个组件构成：")]),t._v(" "),r("ul",[r("li",[r("p",[r("strong",[t._v("Proxy")]),t._v("：Harbor的registry, UI, token等服务，通过一个前置的反向代理统一接收浏览器、Docker客户端的请求，并将请求转发给后端不同的服务。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("Registry")]),t._v("： 负责储存Docker镜像，并处理docker push/pull 命令。由于我们要对用户进行访问控制，即不同用户对Docker image有不同的读写权限，Registry会指向一个token服务，强制用户的每次docker pull/push请求都要携带一个合法的token, Registry会通过公钥对token 进行解密验证。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("Core services")]),t._v("： 这是Harbor的核心功能，主要提供以下服务：")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("UI")]),t._v("：提供图形化界面，帮助用户管理registry上的镜像（image）, 并对用户进行授权。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("webhook")]),t._v("：为了及时获取registry 上image状态变化的情况， 在Registry上配置webhook，把状态变化传递给UI模块。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("token 服务")]),t._v("：负责根据用户权限给每个docker push/pull命令签发token. Docker 客户端向Regiøstry服务发起的请求,如果不包含token，会被重定向到这里，获得token后再重新向Registry进行请求。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("Database")]),t._v("：为core services提供数据库服务，负责储存用户权限、审计日志、Docker image分组信息等数据。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("Job Services")]),t._v("：提供镜像远程复制功能，可以把本地镜像同步到其他Harbor实例中。")])]),t._v(" "),r("li",[r("p",[r("strong",[t._v("Log collector")]),t._v("：为了帮助监控Harbor运行，负责收集其他组件的log，供日后进行分析。")])])]),t._v(" "),r("h2",{attrs:{id:"harbor-实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#harbor-实现"}},[t._v("#")]),t._v(" Harbor 实现")]),t._v(" "),r("p",[t._v("Harbor的每个组件都是以Docker容器的形式构建的，官方也是使用Docker Compose来对它进行部署。用于部署Harbor的Docker Compose模板位于 harbor/docker-compose.yml,打开这个模板文件，发现Harbor是由9个容器组成的；")]),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v("\n")])])]),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("      Name                     Command                  State                 Ports          \n---------------------------------------------------------------------------------------------\nharbor-core         /harbor/harbor_core              Up (healthy)                            \nharbor-db           /docker-entrypoint.sh            Up (healthy)   5432/tcp                 \nharbor-jobservice   /harbor/harbor_jobservice  ...   Up (healthy)                            \nharbor-log          /bin/sh -c /usr/local/bin/ ...   Up (healthy)   127.0.0.1:1514->10514/tcp\nharbor-portal       nginx -g daemon off;             Up (healthy)   8080/tcp                 \nnginx               nginx -g daemon off;             Up (healthy)   0.0.0.0:80->8080/tcp     \nredis               redis-server /etc/redis.conf     Up (healthy)   6379/tcp                 \nregistry            /home/harbor/entrypoint.sh       Up (healthy)   5000/tcp                 \nregistryctl         /home/harbor/start.sh            Up (healthy)  \n")])])]),r("ul",[r("li",[t._v("nginx：nginx负责流量转发和安全验证，对外提供的流量都是从nginx中转，所以开放https的443端口，它将流量分发到后端的ui和正在docker镜像存储的docker registry。")]),t._v(" "),r("li",[t._v("harbor-jobservice：harbor-jobservice 是harbor的job管理模块，job在harbor里面主要是为了镜像仓库之前同步使用的;")]),t._v(" "),r("li",[t._v("harbor-portal：harbor-portal是web管理页面，主要是前端的页面和后端CURD的接口;")]),t._v(" "),r("li",[t._v("registry：registry就是docker原生的仓库，负责保存镜像。")]),t._v(" "),r("li",[t._v("Harbor-ctl：harbor-ctlr是harbor系统管理接口，可以修改系统配置以及获取系统信息。\n这几个容器通过Docker link的形式连接在一起，在容器之间通过容器名字互相访问。对终端用户而言，只需要暴露proxy （即Nginx）的服务端口。")]),t._v(" "),r("li",[t._v("harbor-db：harbor-db是harbor的数据库，这里保存了系统的job以及项目、人员权限管理。由于本harbor的认证也是通过数据，在生产环节大多对接到企业的ldap中；")]),t._v(" "),r("li",[t._v("harbor-log：harbor-log是harbor的日志服务，统一管理harbor的日志。通过inspect可以看出容器统一将日志输出的syslog。")])]),t._v(" "),r("p",[t._v("这几个容器通过Docker link的形式连接在一起，这样，在容器之间可以通过容器名字互相访问。对终端用户而言，只需要暴露proxy （即Nginx）的服务端口。")]),t._v(" "),r("h2",{attrs:{id:"安装-docker-和-docker-compose"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#安装-docker-和-docker-compose"}},[t._v("#")]),t._v(" 安装 Docker 和 Docker-compose")]),t._v(" "),r("p",[t._v("安装Harbor需要先安装 "),r("RouterLink",{attrs:{to:"/08.Registry/docker/1014.html"}},[t._v("docker")]),t._v(" 和 "),r("RouterLink",{attrs:{to:"/08.Registry/docker/1044.html"}},[t._v("docker-compose")]),t._v("。")],1),t._v(" "),r("h3",{attrs:{id:"硬件要求"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#硬件要求"}},[t._v("#")]),t._v(" 硬件要求")]),t._v(" "),r("p",[t._v("下表列出了部署Harbor的最低和建议的硬件配置。")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",{staticStyle:{"text-align":"left"}},[t._v("资源")]),t._v(" "),r("th",{staticStyle:{"text-align":"left"}},[t._v("最小配置")]),t._v(" "),r("th",{staticStyle:{"text-align":"left"}},[t._v("推荐配置")])])]),t._v(" "),r("tbody",[r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("CPU")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("2 CPU")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("4 CPU")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("Mem")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("4 GB")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("8 GB")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("Disk")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("40 GB")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("160 GB")])])])]),t._v(" "),r("h3",{attrs:{id:"软件要求"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#软件要求"}},[t._v("#")]),t._v(" 软件要求")]),t._v(" "),r("p",[t._v("下表列出了必须安装在目标主机上的软件版本。")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",{staticStyle:{"text-align":"left"}},[t._v("软件")]),t._v(" "),r("th",{staticStyle:{"text-align":"left"}},[t._v("版本")]),t._v(" "),r("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),r("tbody",[r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("操作系统")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("Ubuntu 20.04 LTS")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("或更高版本")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("Docker engine")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("20.10.7")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("有关安装说明，请参阅 "),r("a",{attrs:{href:"https://docs.docker.com/engine/installation/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker Engine documentation"),r("OutboundLink")],1)])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("Docker Compose")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("1.29.2")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("有关安装说明，请参阅 "),r("a",{attrs:{href:"https://docs.docker.com/compose/install/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker Compose documentation"),r("OutboundLink")],1)])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("Openssl")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("Latest is preferred")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("用于生成Harbor证书和密钥")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("安装方式")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("离线安装")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("harbor-offline-installer-v2.3.0.tgz")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"left"}},[t._v("安装位置")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("/workspace/harbor")]),t._v(" "),r("td",{staticStyle:{"text-align":"left"}},[t._v("根据个人习惯自行配置")])])])]),t._v(" "),r("h3",{attrs:{id:"网络端口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#网络端口"}},[t._v("#")]),t._v(" 网络端口")]),t._v(" "),r("p",[t._v("Harbor要求在目标主机上打开以下端口。")]),t._v(" "),r("h2",{attrs:{id:"安装-harbor"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#安装-harbor"}},[t._v("#")]),t._v(" 安装 Harbor")]),t._v(" "),r("p",[t._v("安装方式分为在线安装和离线安装两种方式，我这里选择的是在线安装。访问 Harbor 的"),r("a",{attrs:{href:"https://github.com/goharbor/harbor/releases",target:"_blank",rel:"noopener noreferrer"}},[t._v("Github"),r("OutboundLink")],1),t._v("页面。")]),t._v(" "),r("div",{staticClass:"custom-block warning"},[r("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),r("p",[t._v("以下安装过程请切换使用root用户进行操作")])]),t._v(" "),r("p",[t._v("在线安装")]),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -P /workspace https://github.com/goharbor/harbor/releases/download/v2.3.0/harbor-online-installer-v2.3.0.tgz\n")])])]),r("p",[t._v("离线安装"),r("Badge",{attrs:{text:"推荐",type:"success"}})],1),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" -P /workspace https://github.com/goharbor/harbor/releases/download/v2.3.0/harbor-offline-installer-v2.3.0.tgz\n")])])]),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /workspace\n"),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" zxvf harbor-offline-installer-v2.3.0.tgz\n"),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" harbor\n")])])]),r("p",[t._v("复制配置文件模版")]),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" harbor.yml.tmpl harbor.yml\n")])])]),r("p",[t._v("修改配置文件："),r("code",[t._v("harbor.yml")]),t._v("，配置"),r("code",[t._v("hostname")]),t._v("、"),r("code",[t._v("certificate")]),t._v("、"),r("code",[t._v("private_key")]),t._v("。")]),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" harbor.yml\n")])])]),r("div",{staticClass:"language- extra-class"},[r("div",{staticClass:"highlight-lines"},[r("br"),r("br"),r("br"),r("br"),r("div",{staticClass:"highlighted"},[t._v(" ")]),r("br"),r("br"),r("br"),r("br"),r("br"),r("br"),r("br"),r("br"),r("br"),r("br"),r("br"),r("div",{staticClass:"highlighted"},[t._v(" ")]),r("div",{staticClass:"highlighted"},[t._v(" ")]),r("br"),r("br")]),r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("# Configuration file of Harbor\n\n# The IP address or hostname to access admin UI and registry service.\n# DO NOT use localhost or 127.0.0.1, because Harbor needs to be accessed by external clients.\nhostname: harbor.ieooc.com\n\n# http related config\nhttp:\n  # port for http, default is 80. If https enabled, this port will redirect to https port\n  port: 80\n\n# https related config\nhttps:\n  # https port for harbor, default is 443\n  port: 443\n  # The path of cert and key files for nginx\n  certificate: /workspace/harbor/cert/ieooc.com_chain.crt\n  private_key: /workspace/harbor/cert/ieooc.com_key.key\n...\n")])])]),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),r("p",[t._v("hostname = "),r("strong",[t._v("你的域名或IP")]),t._v("，例如："),r("code",[t._v("harbor.ieooc.com")]),t._v(" 或者 "),r("code",[t._v("192.168.199.110")])]),t._v(" "),r("p",[t._v("本地环境使用http时，注释掉https related config，否则需要为https配置证书")])]),t._v(" "),r("p",[t._v("执行安装脚本")]),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[t._v("./install.sh\n")])])]),r("p",[t._v("harbor安装成功控制台日志输出如下：")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v('Creating network "harbor_harbor" with the default driver\nCreating harbor-log ... done\nCreating harbor-db     ... done\nCreating redis         ... done\nCreating registryctl   ... done\nCreating registry      ... done\nCreating harbor-portal ... done\nCreating harbor-core   ... done\nCreating nginx             ... done\nCreating harbor-jobservice ... done\n✔ ----Harbor has been installed and started successfully.----\n')])])]),r("h2",{attrs:{id:"harbor启动和停止"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#harbor启动和停止"}},[t._v("#")]),t._v(" Harbor启动和停止")]),t._v(" "),r("p",[t._v("Harbor 的日常运维管理是通过docker-compose来完成的，Harbor本身有多个服务进程，都放在docker容器之中运行，我们可以通过docker ps命令查看。")]),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v("\n")])])]),r("p",[t._v("或者docker-compose 来查看")]),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /workspace/harbor/\n"),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker-compose")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v("\n")])])]),r("p",[t._v("Harbor的启动和停止")]),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[t._v("启动Harbor\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker-compose start")]),t._v("\n停止Harbor\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker-comose stop")]),t._v("\n重启Harbor\n"),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# docker-compose restart")]),t._v("\n")])])]),r("h2",{attrs:{id:"测试-harbor"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#测试-harbor"}},[t._v("#")]),t._v(" 测试 Harbor")]),t._v(" "),r("p",[t._v("使用你的域名或者IP直接访问Harbor")]),t._v(" "),r("p",[r("img",{attrs:{src:"/img/2021-02-15_20-53-23.png",alt:"Harbor登录页面"}})]),t._v(" "),r("p",[r("img",{attrs:{src:"/img/2021-02-15_20-53-24.png",alt:"Harbor管理页面"}})]),t._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),r("p",[t._v("Harbor 默认用户名："),r("strong",[r("code",[t._v("admin")])]),t._v("，密码："),r("strong",[r("code",[t._v("Harbor12345")])])])]),t._v(" "),r("p",[t._v("至此，Harbor安装完成。")]),t._v(" "),r("h2",{attrs:{id:"harbor-基本使用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#harbor-基本使用"}},[t._v("#")]),t._v(" Harbor 基本使用")]),t._v(" "),r("h3",{attrs:{id:"创建用户"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#创建用户"}},[t._v("#")]),t._v(" 创建用户")]),t._v(" "),r("p",[t._v("创建用户: "),r("code",[t._v("系统管理->用户管理->创建用户")])]),t._v(" "),r("p",[t._v("将新创建用户添加到项目: "),r("code",[t._v("项目->library>成员-> +用户")]),t._v(" 将创建好的用户添加进去。")]),t._v(" "),r("h3",{attrs:{id:"docker私服配置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#docker私服配置"}},[t._v("#")]),t._v(" docker私服配置")]),t._v(" "),r("div",{staticClass:"custom-block warning"},[r("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),r("p",[t._v("如果harbor.yml中的port设置为80（"),r("strong",[t._v("http")]),t._v("），则需要修改daemon.json，添加registry")])]),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("vi")]),t._v(" /etc/docker/daemon.json\n")])])]),r("div",{staticClass:"language-json extra-class"},[r("pre",{pre:!0,attrs:{class:"language-json"}},[r("code",[r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token property"}},[t._v('"insecure-registries"')]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n       "),r("span",{pre:!0,attrs:{class:"token string"}},[t._v('"192.168.199.110"')]),t._v("\n    "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),r("p",[t._v("如果port为443（"),r("strong",[t._v("https")]),t._v("），则不需要修改daemon.json添加registry，必须配置cert，更多的信息可以参考官网。")])]),t._v(" "),r("p",[t._v("重启docker")]),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[t._v("systemctl restart "),r("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("\n")])])]),r("p",[t._v("登录registry")]),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" login "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".199.110\n")])])]),r("p",[t._v("为镜像打tag")]),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" tag SOURCE_IMAGE"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":TAG"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".199.110/library/IMAGE"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":TAG"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),r("p",[t._v("将镜像推送到harbor")]),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" push "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".199.110/library/IMAGE"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":TAG"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),r("p",[t._v("登出registry")]),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("logout")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".199.110\n")])])]),r("p",[t._v("拉取镜像")]),t._v(" "),r("div",{staticClass:"language-bash extra-class"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[r("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" pull "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".199.110/library/IMAGE"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(":TAG"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=e.exports}}]);