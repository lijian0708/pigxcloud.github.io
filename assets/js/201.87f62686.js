(window.webpackJsonp=window.webpackJsonp||[]).push([[201],{670:function(t,a,s){"use strict";s.r(a);var r=s(29),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"分布式认证需求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分布式认证需求"}},[t._v("#")]),t._v(" 分布式认证需求")]),t._v(" "),s("p",[t._v("分布式系统的每个服务都会有认证、授权的需求，如果每个服务都实现一套认证授权逻辑会非常冗余，考虑分布式 系统共享性的特点，需要由独立的认证服务处理系统认证授权的请求;考虑分布式系统开放性的特点，不仅对系统 内部服务提供认证，对第三方系统也要提供认证。分布式认证的需求总结如下:")]),t._v(" "),s("h2",{attrs:{id:"统一认证授权"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#统一认证授权"}},[t._v("#")]),t._v(" 统一认证授权")]),t._v(" "),s("p",[t._v("提供独立的认证服务，统一处理认证授权。")]),t._v(" "),s("p",[t._v("无论是不同类型的用户，还是不同种类的客户端(web端，H5、APP)，均采用一致的认证、权限、会话机制，实现 统一认证授权。")]),t._v(" "),s("p",[t._v("要实现统一则认证方式必须可扩展，支持各种认证需求，比如:用户名密码认证、短信验证码、二维码、人脸识等认证方式，并可以非常灵活的切换。")]),t._v(" "),s("h2",{attrs:{id:"应用接入认证"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应用接入认证"}},[t._v("#")]),t._v(" 应用接入认证")]),t._v(" "),s("p",[t._v("应提供扩展和开放能力，提供安全的系统对接机制，并可开放部分API给接入第三方使用，一方应用(内部 系统服 务)和三方应用(第三方应用)均采用统一机制接入。")])])}),[],!1,null,null,null);a.default=e.exports}}]);