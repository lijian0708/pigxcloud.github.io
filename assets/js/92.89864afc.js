(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{560:function(t,s,a){"use strict";a.r(s);var n=a(29),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"分布式minio快速入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式minio快速入门"}},[t._v("#")]),t._v(" 分布式Minio快速入门")]),t._v(" "),a("p",[t._v("分布式Minio可以让你将多块硬盘（甚至在不同的机器上）组成一个对象存储服务。由于硬盘分布在不同的节点上，分布式Minio避免了单点故障。")]),t._v(" "),a("h2",{attrs:{id:"分布式minio有什么好处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式minio有什么好处"}},[t._v("#")]),t._v(" 分布式Minio有什么好处?")]),t._v(" "),a("p",[t._v("在大数据领域，通常的设计理念都是无中心和分布式。Minio分布式模式可以帮助你搭建一个高可用的对象存储服务，你可以使用这些存储设备，而不用考虑其真实物理位置。")]),t._v(" "),a("h3",{attrs:{id:"数据保护"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据保护"}},[t._v("#")]),t._v(" 数据保护")]),t._v(" "),a("p",[t._v("分布式 MinIO使用"),a("a",{attrs:{href:"https://docs.min.io/docs/minio-erasure-code-quickstart-guide",target:"_blank",rel:"noopener noreferrer"}},[t._v("erasure code"),a("OutboundLink")],1),t._v("提供针对多个节点/驱动器故障和"),a("a",{attrs:{href:"https://github.com/minio/minio/blob/master/docs/erasure/README.md#what-is-bit-rot-protection",target:"_blank",rel:"noopener noreferrer"}},[t._v("bit rot"),a("OutboundLink")],1),t._v("保护。由于分布式 MinIO 所需的最小磁盘为 4（与擦除编码所需的最小磁盘相同），因此在您启动分布式 MinIO 时，擦除代码会自动启动。")]),t._v(" "),a("p",[t._v("如果一个或多个磁盘在 PutObject 或 NewMultipartUpload 操作开始时处于脱机状态，该对象将自动添加额外的数据保护位，以为这些对象提供额外的安全性。")]),t._v(" "),a("h3",{attrs:{id:"高可用性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高可用性"}},[t._v("#")]),t._v(" 高可用性")]),t._v(" "),a("p",[t._v("如果托管磁盘的服务器脱机，独立的 MinIO 服务器就会停机。相比之下，只要有"),a("em",[t._v("m/2 个")]),t._v("服务器或"),a("em",[t._v("m*n")]),t._v("/2 个或更多磁盘在线，具有"),a("em",[t._v("m 个")]),t._v("服务器和"),a("em",[t._v("n 个")]),t._v("磁盘的分布式 MinIO 设置将使您的数据安全。")]),t._v(" "),a("p",[t._v("例如，每个节点有 200 个磁盘的 16 台服务器分布式设置将继续提供文件，默认配置下最多 4 个服务器可以离线，即大约 800 个磁盘关闭 MinIO 将继续读取和写入对象。")]),t._v(" "),a("p",[t._v("请参考默认值的更多理解尺寸指南选择取决于你删除的条带大小"),a("a",{attrs:{href:"https://github.com/minio/minio/blob/master/docs/distributed/SIZING.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("在这里"),a("OutboundLink")],1),t._v("。可以使用"),a("a",{attrs:{href:"https://github.com/minio/minio/tree/master/docs/erasure/storage-class",target:"_blank",rel:"noopener noreferrer"}},[t._v("storage classes."),a("OutboundLink")],1),t._v("更改奇偶校验设置。")]),t._v(" "),a("h3",{attrs:{id:"一致性保证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一致性保证"}},[t._v("#")]),t._v(" 一致性保证")]),t._v(" "),a("p",[t._v("对于分布式和独立模式下的所有 I/O 操作，MinIO 遵循严格的先"),a("strong",[t._v("读后写")]),t._v("和"),a("strong",[t._v("写后列表")]),t._v("一致性模型。仅当您使用磁盘文件系统（例如 xfs、ext4 或 zfs 等）进行分布式设置时，才能保证此一致性模型。")]),t._v(" "),a("p",[a("strong",[t._v("如果 MinIO 分布式设置在下面使用 NFS 卷，则不能保证 MinIO 将提供这些一致性保证，因为 NFS 不是设计上一致的文件系统（如果您必须使用 NFS，我们建议您至少使用 NFSv4 而不是 NFSv3）。")])]),t._v(" "),a("h1",{attrs:{id:"开始吧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开始吧"}},[t._v("#")]),t._v(" 开始吧")]),t._v(" "),a("p",[t._v("如果你了解Minio单机模式的搭建的话，分布式搭建的流程基本一样，Minio服务基于命令行传入的参数自动切换成单机模式还是分布式模式。")]),t._v(" "),a("h2",{attrs:{id:"_1-前提条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-前提条件"}},[t._v("#")]),t._v(" 1. 前提条件")]),t._v(" "),a("p",[t._v("安装 MinIO - [MinIO 快速入门指南](./02.Minio Docker快速入门.md)。")]),t._v(" "),a("h2",{attrs:{id:"_2-运行分布式minio"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-运行分布式minio"}},[t._v("#")]),t._v(" 2. 运行分布式Minio")]),t._v(" "),a("p",[t._v("要启动分布式 MinIO 实例，您只需将驱动器位置作为参数传递给 minio 服务器命令。然后，您需要在所有参与节点上运行相同的命令。")]),t._v(" "),a("p",[a("strong",[t._v("注意：")])]),t._v(" "),a("ul",[a("li",[t._v("所有运行分布式 MinIO 的节点都应该共享一个公共根凭证，以便节点相互连接和信任。为了实现这一目标，它建议以root用户和root密码导出为环境变量，"),a("code",[t._v("MINIO_ROOT_USER")]),t._v("和"),a("code",[t._v("MINIO_ROOT_PASSWORD")]),t._v("执行MinIO服务器命令之前，所有节点上。如果未导出，"),a("code",[t._v("minioadmin/minioadmin")]),t._v("则应使用默认凭据。")]),t._v(" "),a("li",[t._v("MinIO 创建每组4到16个驱动器的纠删码组。您提供的驱动器总数必须是这些数字之一的倍数。")]),t._v(" "),a("li",[t._v("MinIO 选择最大的 EC 集大小，它分为给定的驱动器总数或节点总数 - 确保保持均匀分布，即每个节点参与每组相同数量的驱动器。")]),t._v(" "),a("li",[t._v("每个对象都写入单个 EC 集，因此分布在不超过 16 个驱动器上。")]),t._v(" "),a("li",[t._v("建议所有运行分布式 MinIO 设置的节点是同构的，即相同的操作系统、相同的磁盘数量和相同的网络互连。")]),t._v(" "),a("li",[t._v("MinIO 分布式模式需要新目录。如果需要，驱动器可以与其他应用程序共享。您可以通过使用 MinIO 专有的子目录来完成此操作。例如，如果您在"),a("code",[t._v("/export")]),t._v("下安装了您的卷，则可以将"),a("code",[t._v("/export/data")]),t._v("作为参数传递给 MinIO 服务器。")]),t._v(" "),a("li",[t._v("下面的 IP 地址和驱动器路径仅用于演示目的，您需要将它们替换为实际的 IP 地址和驱动器路径或文件夹。")]),t._v(" "),a("li",[t._v("运行分布式 MinIO 实例的服务器之间的间隔应小于 15 分钟。您可以启用"),a("a",{attrs:{href:"http://www.ntp.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("NTP"),a("OutboundLink")],1),t._v("服务作为最佳实践，以确保跨服务器的时间相同。")]),t._v(" "),a("li",[a("code",[t._v("MINIO_DOMAIN")]),t._v(" 应定义和导出环境变量以支持存储桶 DNS 样式。")]),t._v(" "),a("li",[t._v("在Windows操作系统上运行分布式 MinIO被认为是实验性的。请谨慎行事。")])]),t._v(" "),a("p",[t._v("示例1：启动分布式MinIO例如在n个节点，其中m个驱动每个安装在"),a("code",[t._v("/export1")]),t._v("到"),a("code",[t._v("/exportm")]),t._v("（如图下文），通过所有n个节点上运行此命令：")]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/2021-08-23_151103.png",alt:"Architecture-diagram_distributed_nm"}})]),t._v(" "),a("h4",{attrs:{id:"gnu-linux-和-macos"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gnu-linux-和-macos"}},[t._v("#")]),t._v(" GNU/Linux 和 macOS")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MINIO_ROOT_USER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ACCESS_KEY"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MINIO_ROOT_PASSWORD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SECRET_KEY"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nminio server http://192.168.1.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/export"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" --console-address "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('":9001"')]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("在上面的例子中"),a("code",[t._v("n")]),t._v("，"),a("code",[t._v("m")]),t._v("代表正整数，"),a("em",[t._v("不要复制粘贴，根据本地部署和设置进行更改")]),t._v("。")]),t._v(" "),a("p",[t._v("特别注意"),a("code",[t._v("{1...n}")]),t._v("显示有 3 个点！仅使用 2 个"),a("code",[t._v("{1..n}")]),t._v("点将被您的 shell 解释并且不会传递到 MinIO 服务器，从而影响擦除编码顺序，从而影响性能和高可用性。"),a("strong",[t._v("始终使用省略号语法"),a("code",[t._v("{1...n}")]),t._v("（3 个点！）以获得最佳纠删码分布")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"/img/2021-08-30_151103.jpg",alt:"分布式Minio,8节点，每个节点一块盘"}})]),t._v(" "),a("p",[t._v("示例2: 启动分布式Minio实例，4节点，每节点4块盘，需要在4个节点上都运行下面的命令。")]),t._v(" "),a("h4",{attrs:{id:"gnu-linux-和-macos-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gnu-linux-和-macos-2"}},[t._v("#")]),t._v(" GNU/Linux 和 macOS")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MINIO_ACCESS_KEY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ACCESS_KEY"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MINIO_SECRET_KEY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SECRET_KEY"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nminio server http://192.168.1.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/export"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("img",{attrs:{src:"/img/2021-08-30_151104.jpg",alt:"分布式Minio,4节点，每节点4块盘"}})]),t._v(" "),a("h4",{attrs:{id:"扩展现有的分布式设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展现有的分布式设置"}},[t._v("#")]),t._v(" 扩展现有的分布式设置")]),t._v(" "),a("p",[t._v("MinIO 支持通过在命令行上指定新的集群集来扩展分布式纠删码集群，如下所示：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MINIO_ROOT_USER")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("ACCESS_KEY"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("MINIO_ROOT_PASSWORD")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("SECRET_KEY"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nminio server http://host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/export"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" http://host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/export"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("minio server http://host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/export"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".16"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" http://host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".12"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("/export"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".16"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("现在服务器已将总存储扩展了(newly_ added_servers*m)个磁盘，使总数达到(existing_servers*m)+(newly_added_servers*m) 个磁盘。新的对象上传请求会自动使用最少使用的集群开始。这种扩展策略无休止地工作，因此您可以根据需要永久扩展集群。当您重新启动时，它会立即且不会中断应用程序。命令行中的每组服务器称为一个池。本示例中有 2 个服务器池。新对象按照每个池中的可用空间量按比例放置在服务器池中。在每个池中，驱动器擦除集的位置是根据确定性散列算法确定的。")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("您添加的每个池都必须与原始池具有相同的纠删码奇偶校验配置，以便保持相同的数据冗余 SLA。")])]),t._v(" "),a("h2",{attrs:{id:"_3-验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-验证"}},[t._v("#")]),t._v(" 3. 验证")]),t._v(" "),a("p",[t._v("验证是否部署成功，使用浏览器访问Minio服务或者使用 "),a("a",{attrs:{href:"https://docs.min.io/docs/minio-client-quickstart-guide",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("mc")]),a("OutboundLink")],1),t._v("。多个节点的存储容量和就是分布式Minio的存储容量。")])])}),[],!1,null,null,null);s.default=r.exports}}]);