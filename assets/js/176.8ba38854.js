(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{645:function(s,t,a){"use strict";a.r(t);var e=a(29),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"kubernetes-安装前的准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubernetes-安装前的准备"}},[s._v("#")]),s._v(" Kubernetes 安装前的准备")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("官方文档")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/",target:"_blank",rel:"noopener noreferrer"}},[s._v("安装 kubeadm"),a("OutboundLink")],1),s._v(" "),a("a",{attrs:{href:"https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/",target:"_blank",rel:"noopener noreferrer"}},[s._v("使用 kubeadm 创建集群"),a("OutboundLink")],1)])]),s._v(" "),a("h2",{attrs:{id:"前提条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前提条件"}},[s._v("#")]),s._v(" 前提条件")]),s._v(" "),a("p",[s._v("本次安装采用 CentOS 7 版本安装 kubernetes 集群环境，集群节点为 1 主 2 从模式，此次对虚拟机会有些基本要求，如下：")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("OS")]),s._v("：CentOS 7.9")]),s._v(" "),a("li",[a("strong",[s._v("CPU")]),s._v("：最低要求，1 CPU 2 核")]),s._v(" "),a("li",[a("strong",[s._v("内存")]),s._v("：最低要求，2GB")]),s._v(" "),a("li",[a("strong",[s._v("磁盘")]),s._v("：最低要求，20GB")]),s._v(" "),a("li",[a("strong",[s._v("网络")]),s._v("：可以访问外网，且集群中的所有机器的网络可以相互通信")])]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("基于Ubuntu 部署K8S教程")]),s._v(" "),a("p",[a("RouterLink",{attrs:{to:"/pages/43a41d/"}},[s._v("请点击这里")])],1)]),s._v(" "),a("p",[s._v("创建三台虚拟机，分别命名如下：")]),s._v(" "),a("ul",[a("li",[s._v("k8s-master")]),s._v(" "),a("li",[s._v("k8s-node1")]),s._v(" "),a("li",[s._v("k8s-node2")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("主机名")]),s._v(" "),a("th",[s._v("IP地址")]),s._v(" "),a("th",[s._v("角色")]),s._v(" "),a("th",[s._v("OS")]),s._v(" "),a("th",[s._v("组件")]),s._v(" "),a("th",[s._v("配置")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("k8s-master")]),s._v(" "),a("td",[s._v("192.168.199.101")]),s._v(" "),a("td",[s._v("master")]),s._v(" "),a("td",[s._v("CentOS7.7")]),s._v(" "),a("td",[s._v("kube-apiserver"),a("br"),s._v("kube-controller-manasger"),a("br"),s._v("kube-scheduler"),a("br"),s._v("kube-proxy"),a("br"),s._v("etcd"),a("br"),s._v("coredns"),a("br"),s._v("kube-flannel")]),s._v(" "),a("td",[s._v("2核2G")])]),s._v(" "),a("tr",[a("td",[s._v("k8s-node1")]),s._v(" "),a("td",[s._v("192.168.199.102")]),s._v(" "),a("td",[s._v("node")]),s._v(" "),a("td",[s._v("CentOS7.7")]),s._v(" "),a("td",[s._v("kube-proxy"),a("br"),s._v("kube-flannel")]),s._v(" "),a("td",[s._v("2核2G")])]),s._v(" "),a("tr",[a("td",[s._v("k8s-node2")]),s._v(" "),a("td",[s._v("192.168.199.103")]),s._v(" "),a("td",[s._v("node")]),s._v(" "),a("td",[s._v("CentOS7.7")]),s._v(" "),a("td",[s._v("kube-proxy"),a("br"),s._v("kube-flannel")]),s._v(" "),a("td",[s._v("2核2G")])])])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),a("p",[s._v("无特殊说明以下操作在所有节点执行")])]),s._v(" "),a("h2",{attrs:{id:"修改主机名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改主机名"}},[s._v("#")]),s._v(" 修改主机名")]),s._v(" "),a("p",[s._v("在同一局域网中主机名不应该相同，所以我们需要做修改。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#master节点:")]),s._v("\nhostnamectl set-hostname k8s-master\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#node1节点：")]),s._v("\nhostnamectl set-hostname k8s-node1\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#node2节点:")]),s._v("\nhostnamectl set-hostname k8s-node2\n")])])]),a("h2",{attrs:{id:"修改-etc-hosts文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改-etc-hosts文件"}},[s._v("#")]),s._v(" 修改/etc/hosts文件")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" /etc/hosts "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\n192.168.199.101 k8s-master\n192.168.199.102 k8s-node1\n192.168.199.103 k8s-node2\nEOF")]),s._v("\n")])])]),a("h2",{attrs:{id:"关闭防火墙和selinux"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关闭防火墙和selinux"}},[s._v("#")]),s._v(" 关闭防火墙和selinux")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("systemctl stop firewalld "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" systemctl disable firewalld\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^SELINUX=enforcing$/SELINUX=disabled/'")]),s._v(" /etc/selinux/config "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" setenforce "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])])]),a("h2",{attrs:{id:"关闭swap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关闭swap"}},[s._v("#")]),s._v(" 关闭swap")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("swapoff -a\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("yes")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" /etc/fstab /etc/fstab_bak\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/fstab_bak "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -v swap "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/fstab\n")])])]),a("p",[s._v("使用"),a("code",[s._v("free -h")]),s._v("命令检查配置是否生效")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master etc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# free -h   ")]),s._v("\n              total        used        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),s._v("      shared  buff/cache   available\nMem:           "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".8G        142M        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".5G        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(".5M        122M        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".5G\nSwap:            0B          0B          0B\n")])])]),a("h2",{attrs:{id:"配置时间同步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置时间同步"}},[s._v("#")]),s._v(" 配置时间同步")]),s._v(" "),a("p",[s._v("使用chrony同步时间，配置master节点与网络NTP服务器同步时间，所有node节点与master节点同步时间。")]),s._v(" "),a("p",[s._v("配置master节点：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#安装chrony：")]),s._v("\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y chrony\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#注释默认ntp服务器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^server/#&/'")]),s._v(" /etc/chrony.conf\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#指定上游公共 ntp 服务器，并允许其他节点同步时间")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" /etc/chrony.conf "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\nserver 0.asia.pool.ntp.org iburst\nserver 1.asia.pool.ntp.org iburst\nserver 2.asia.pool.ntp.org iburst\nserver 3.asia.pool.ntp.org iburst\nallow all\nEOF")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#重启chronyd服务并设为开机启动：")]),s._v("\nsystemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" chronyd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" systemctl restart chronyd\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#开启网络时间同步功能")]),s._v("\ntimedatectl set-ntp "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n")])])]),a("h2",{attrs:{id:"配置所有node节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置所有node节点"}},[s._v("#")]),s._v(" 配置所有node节点")]),s._v(" "),a("p",[s._v("(注意修改master IP地址)")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#安装chrony：")]),s._v("\nyum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y chrony\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#注释默认服务器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^server/#&/'")]),s._v(" /etc/chrony.conf\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#指定内网 master节点为上游NTP服务器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".199.101 iburst "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" /etc/chrony.conf\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#重启服务并设为开机启动：")]),s._v("\nsystemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" chronyd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" systemctl restart chronyd\n")])])]),a("p",[s._v("所有节点执行"),a("code",[s._v("chronyc sources")]),s._v("命令，查看存在以^*开头的行，说明已经与服务器时间同步")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@localhost ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# chronyc sources")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("210")]),s._v(" Number of sources "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nMS Name/IP address         Stratum Poll Reach LastRx Last sample               \n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n^* k8s-master                    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("   +358ns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("  -18ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" +/-   36ms\n")])])]),a("h2",{attrs:{id:"修改iptables相关参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改iptables相关参数"}},[s._v("#")]),s._v(" 修改iptables相关参数")]),s._v(" "),a("p",[s._v("RHEL/CentOS 7上的一些用户报告了由于"),a("code",[s._v("iptables")]),s._v("被绕过而导致流量路由不正确的问题。创建"),a("code",[s._v("/etc/sysctl.d/k8s.conf")]),s._v("文件，添加如下内容：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF"),a("span",{pre:!0,attrs:{class:"token bash punctuation"}},[s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  /etc/sysctl.d/k8s.conf")]),s._v("\nvm.swappiness = 0\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.ipv4.ip_forward = 1\nEOF")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使配置生效")]),s._v("\nmodprobe br_netfilter\nsysctl -p /etc/sysctl.d/k8s.conf\n")])])]),a("h2",{attrs:{id:"加载ipvs相关模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加载ipvs相关模块"}},[s._v("#")]),s._v(" 加载ipvs相关模块")]),s._v(" "),a("p",[s._v("由于"),a("code",[s._v("ipvs")]),s._v("已经加入到了内核的主干，所以为"),a("code",[s._v("kube-proxy")]),s._v("开启"),a("code",[s._v("ipvs")]),s._v("的前提需要加载以下的内核模块：\n在所有的Kubernetes节点执行以下脚本:")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/sysconfig/modules/ipvs.modules "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF\n#!/bin/bash\nmodprobe -- ip_vs\nmodprobe -- ip_vs_rr\nmodprobe -- ip_vs_wrr\nmodprobe -- ip_vs_sh\nmodprobe -- nf_conntrack_ipv4\nEOF")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#执行脚本")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("755")]),s._v(" /etc/sysconfig/modules/ipvs.modules "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" /etc/sysconfig/modules/ipvs.modules "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" lsmod "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -e ip_vs -e nf_conntrack_ipv4\n")])])]),a("p",[s._v("上面脚本创建了"),a("code",[s._v("/etc/sysconfig/modules/ipvs.modules")]),s._v("文件，保证在节点重启后能自动加载所需模块。 使用"),a("code",[s._v("lsmod | grep -e ip_vs -e nf_conntrack_ipv4")]),s._v("命令查看是否已经正确加载所需的内核模块。\n接下来还需要确保各个节点上已经安装了"),a("code",[s._v("ipset")]),s._v("软件包。 为了便于查看ipvs的代理规则，最好安装一下管理工具"),a("code",[s._v("ipvsadm")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" ipset ipvsadm -y\n")])])]),a("h2",{attrs:{id:"安装-docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-docker"}},[s._v("#")]),s._v(" 安装 Docker")]),s._v(" "),a("p",[s._v("Kubernetes默认的容器运行时仍然是Docker，使用的是kubelet中内置dockershim CRI实现。")]),s._v(" "),a("h3",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装所需依赖")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y yum-utils device-mapper-persistent-data lvm2\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置docker yum源")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装 Docker Engine-Community")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" docker-ce docker-ce-cli containerd.io\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动 Docker CE 并设置开机自启动")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl start "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n")])])]),a("h3",{attrs:{id:"验证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#验证"}},[s._v("#")]),s._v(" 验证")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@k8s-master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker version  ")]),s._v("\nClient: Docker Engine - Community\n Version:           "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19.03")]),s._v(".8\n API version:       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.40")]),s._v("\n Go version:        go1.12.17\n Git commit:        afacb8b\n Built:             Wed Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" 01:27:04 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("\n OS/Arch:           linux/amd64\n Experimental:      "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n\nServer: Docker Engine - Community\n Engine:\n  Version:          "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("19.03")]),s._v(".8\n  API version:      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.40")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("minimum version "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.12")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  Go version:       go1.12.17\n  Git commit:       afacb8b\n  Built:            Wed Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(" 01:25:42 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("\n  OS/Arch:          linux/amd64\n  Experimental:     "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n containerd:\n  Version:          "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.2")]),s._v(".13\n  GitCommit:        7ad184331fa3e55e52b890ea95e65ba581ae3429\n runc:\n  Version:          "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v(".0-rc10\n  GitCommit:        dc9208a3303feef5b3839f4323d9beb36df0a9dd\n docker-init:\n  Version:          "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.18")]),s._v(".0\n  GitCommit:        fec3683\n")])])]),a("h3",{attrs:{id:"配置加速器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置加速器"}},[s._v("#")]),s._v(" 配置加速器")]),s._v(" "),a("p",[s._v("对于使用 "),a("strong",[s._v("systemd")]),s._v(" 的系统，请在 "),a("code",[s._v("/etc/docker/daemon.json")]),s._v(" 中写入如下内容（如果文件不存在请新建该文件）")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/docker/daemon.json "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('EOF\n{\n  "registry-mirrors": [\n    "https://registry.docker-cn.com"\n  ]\n}\nEOF')]),s._v("\n")])])]),a("p",[s._v("验证加速器是否配置成功：")]),s._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl restart "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" info\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 出现如下语句即表示配置成功")]),s._v("\nRegistry Mirrors:\n https://registry.docker-cn.com/\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);