(window.webpackJsonp=window.webpackJsonp||[]).push([[179],{648:function(t,s,a){"use strict";a.r(s);var e=a(29),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"使用-kubeadm-部署-master-节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-kubeadm-部署-master-节点"}},[t._v("#")]),t._v(" 使用 kubeadm 部署 Master 节点")]),t._v(" "),a("h2",{attrs:{id:"运行-kubeadm-init-命令安装-master"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行-kubeadm-init-命令安装-master"}},[t._v("#")]),t._v(" 运行 kubeadm init 命令安装 Master")]),t._v(" "),a("p",[t._v("至此，准备工作已经就绪。执行 kubeadm init 命令即可一键安装 Kubernetes 的 Master。")]),t._v(" "),a("p",[t._v("在开始之前需要注意：kubeadm 的安装过程不涉及网络插件（CNI）的初始化，因此 kubeadm 初步安装完成的集群不具备网络功能，任何 Pod 包括自带的 CoreDNS 都无法正常工作。而网络插件的安装往往对 kubeadm init 命令的参数有一定的要求。例如，安装 Calico 插件时需要指定 "),a("code",[t._v("--pod-network-cidr=192.168.0.0/16")]),t._v("。")]),t._v(" "),a("p",[t._v("接下来使用 kubeadm init 命令，使用前面创建的配置文件进行集群的初始化：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("kubeadm init --config"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("init-config.yaml "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tee")]),t._v(" kubeadm-init.log\n")])])]),a("p",[t._v("追加的 "),a("code",[t._v("tee kubeadm-init.log")]),t._v(" 用以输出日志。运行后，控制台将输出如下内容：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("W0419 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":11:25.925070   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12136")]),t._v(" configset.go:202"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" WARNING: kubeadm cannot validate component configs "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" API "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("groups")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubelet.config.k8s.io kubeproxy.config.k8s.io"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("init"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Using Kubernetes version: v1.18.0\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("preflight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Running pre-flight checks\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("WARNING IsDockerSystemdCheck"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(": detected "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cgroupfs"')]),t._v(" as the Docker cgroup driver. The recommended driver is "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"systemd"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" Please follow the guide at https://kubernetes.io/docs/setup/cri/\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("preflight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Pulling images required "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" setting up a Kubernetes cluster\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("preflight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" This might take a minute or two, depending on the speed of your internet connection\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("preflight"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" You can also perform this action "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" beforehand using "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'kubeadm config images pull'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubelet-start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Writing kubelet environment "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" with flags to "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/var/lib/kubelet/kubeadm-flags.env"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubelet-start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Writing kubelet configuration to "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/var/lib/kubelet/config.yaml"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubelet-start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Starting the kubelet\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Using certificateDir folder "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/etc/kubernetes/pki"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ca"')]),t._v(" certificate and key\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apiserver"')]),t._v(" certificate and key\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" apiserver serving cert is signed "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" DNS names "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k8s-master kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" and IPs "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.96")]),t._v(".0.1 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".199.101"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apiserver-kubelet-client"')]),t._v(" certificate and key\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"front-proxy-ca"')]),t._v(" certificate and key\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"front-proxy-client"')]),t._v(" certificate and key\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"etcd/ca"')]),t._v(" certificate and key\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"etcd/server"')]),t._v(" certificate and key\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" etcd/server serving cert is signed "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" DNS names "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k8s-master localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" and IPs "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".199.101 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1 ::1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"etcd/peer"')]),t._v(" certificate and key\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" etcd/peer serving cert is signed "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" DNS names "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("k8s-master localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" and IPs "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".199.101 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),t._v(".0.1 ::1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"etcd/healthcheck-client"')]),t._v(" certificate and key\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"apiserver-etcd-client"')]),t._v(" certificate and key\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("certs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Generating "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sa"')]),t._v(" key and public key\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubeconfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Using kubeconfig folder "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/etc/kubernetes"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubeconfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Writing "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin.conf"')]),t._v(" kubeconfig "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubeconfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Writing "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubelet.conf"')]),t._v(" kubeconfig "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubeconfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Writing "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"controller-manager.conf"')]),t._v(" kubeconfig "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubeconfig"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Writing "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scheduler.conf"')]),t._v(" kubeconfig "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("control-plane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Using manifest folder "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/etc/kubernetes/manifests"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("control-plane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Creating static Pod manifest "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kube-apiserver"')]),t._v("\nW0419 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":11:31.212283   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12136")]),t._v(" manifests.go:225"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" the default kube-apiserver authorization-mode is "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Node,RBAC"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" using "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Node,RBAC"')]),t._v("\nW0419 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":11:31.213179   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("12136")]),t._v(" manifests.go:225"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" the default kube-apiserver authorization-mode is "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Node,RBAC"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" using "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Node,RBAC"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("control-plane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Creating static Pod manifest "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kube-controller-manager"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("control-plane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Creating static Pod manifest "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kube-scheduler"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("etcd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Creating static Pod manifest "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("local")]),t._v(" etcd "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/etc/kubernetes/manifests"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("wait-control-plane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Waiting "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the kubelet to boot up the control plane as static Pods from directory "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/etc/kubernetes/manifests"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" This can take up to 4m0s\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("apiclient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" All control plane components are healthy after "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21.005920")]),t._v(" seconds\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("upload-config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Storing the configuration used "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" ConfigMap "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubeadm-config"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kube-system"')]),t._v(" Namespace\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubelet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Creating a ConfigMap "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubelet-config-1.18"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" namespace kube-system with the configuration "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" the kubelets "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the cluster\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("upload-certs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Skipping phase. Please see --upload-certs\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mark-control-plane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Marking the "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" k8s-master as control-plane by adding the label "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"node-role.kubernetes.io/master=''\"")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mark-control-plane"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Marking the "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" k8s-master as control-plane by adding the taints "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("node-role.kubernetes.io/master:NoSchedule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bootstrap-token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Using token: abcdef.0123456789abcdef\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bootstrap-token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bootstrap-token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" configured RBAC rules to allow Node Bootstrap tokens to get nodes\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bootstrap-token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" configured RBAC rules to allow Node Bootstrap tokens to post CSRs "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" order "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" nodes to get long term certificate credentials\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bootstrap-token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bootstrap-token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" configured RBAC rules to allow certificate rotation "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" all "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" client certificates "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the cluster\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("bootstrap-token"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Creating the "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cluster-info"')]),t._v(" ConfigMap "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" the "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kube-public"')]),t._v(" namespace\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("kubelet-finalize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Updating "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/etc/kubernetes/kubelet.conf"')]),t._v(" to point to a rotatable kubelet client certificate and key\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("addons"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Applied essential addon: CoreDNS\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("addons"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Applied essential addon: kube-proxy\n\nYour Kubernetes control-plane has initialized successfully"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\nTo start using your cluster, you need to run the following as a regular user:\n\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" -i /etc/kubernetes/admin.conf "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube/config\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" -u"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" -g"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube/config\n\nYou should now deploy a pod network to the cluster.\nRun "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kubectl apply -f [podnetwork].yaml"')]),t._v(" with one of the options listed at:\n  https://kubernetes.io/docs/concepts/cluster-administration/addons/\n\nThen you can "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" any number of worker nodes by running the following on each as root:\n\nkubeadm "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".199.101:6443 --token abcdef.0123456789abcdef "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    --discovery-token-ca-cert-hash sha256:b694f8ad9e298f3ce7ec83f4fa60c784e09bd34c995a01cc862c269a4ac51cef\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("记录下初始化结果中的kubeadm join命令，部署worker节点时会用到")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("如果安装 kubernetes 版本和下载的镜像版本不统一则会出现 "),a("code",[t._v("timed out waiting for the condition")]),t._v(" 错误。中途失败或是想修改配置可以使用 "),a("code",[t._v("kubeadm reset")]),t._v(" 命令重置配置，再做初始化操作即可。")])]),t._v(" "),a("h2",{attrs:{id:"配置-kubectl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置-kubectl"}},[t._v("#")]),t._v(" 配置 kubectl")]),t._v(" "),a("p",[a("code",[t._v("kubectl")]),t._v(" 是管理 Kubernetes Cluster 的命令行工具，前面我们已经在所有的节点安装了 "),a("code",[t._v("kubectl")]),t._v("。Master 初始化完成后需要做一些配置工作，然后 "),a("code",[t._v("kubectl")]),t._v(" 就能使用了。\n依照 "),a("code",[t._v("kubeadm init")]),t._v(" 输出的最后提示，"),a("strong",[t._v("推荐用 Linux 普通用户执行")]),t._v(" "),a("code",[t._v("kubectl")]),t._v("。")]),t._v(" "),a("p",[t._v("创建普通用户"),a("code",[t._v("centos")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#创建普通用户并设置密码123456")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("useradd")]),t._v(" centos "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"centos:123456"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" chpasswd centos\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#追加sudo权限,并配置sudo免密")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sed")]),t._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/^root/a\\centos  ALL=(ALL)       NOPASSWD:ALL'")]),t._v(" /etc/sudoers\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#保存集群安全配置文件到当前用户.kube目录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("su")]),t._v(" - centos\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" -i /etc/kubernetes/admin.conf "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube/config\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("chown")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" -u"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v(" -g"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$HOME")]),t._v("/.kube/config\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#启用 kubectl 命令自动补全功能（注销重新登录生效）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"source <(kubectl completion bash)"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ~/.bashrc\n")])])]),a("p",[t._v("需要这些配置命令的原因是：Kubernetes 集群默认需要加密方式访问。所以，这几条命令，就是将刚刚部署生成的 Kubernetes 集群的安全配置文件，保存到当前用户的 "),a("code",[t._v(".kube")]),t._v(" 目录下，"),a("code",[t._v("kubectl")]),t._v(" 默认会使用这个目录下的授权信息访问 Kubernetes 集群。\n如果不这么做的话，我们每次都需要通过 "),a("code",[t._v("export KUBECONFIG")]),t._v(" 环境变量告诉 "),a("code",[t._v("kubectl")]),t._v(" 这个安全配置文件的位置。\n配置完成后 "),a("code",[t._v("centos")]),t._v(" 用户就可以使用 "),a("code",[t._v("kubectl")]),t._v(" 命令管理集群了。")]),t._v(" "),a("h2",{attrs:{id:"验证是否成功"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#验证是否成功"}},[t._v("#")]),t._v(" 验证是否成功")]),t._v(" "),a("p",[t._v("查看集群状态：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("centos@k8s-master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ kubectl get cs\nNAME                 STATUS    MESSAGE             ERROR\ncontroller-manager   Healthy   ok                  \nscheduler            Healthy   ok                  \netcd-0               Healthy   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"health"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"true"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n")])])]),a("p",[t._v("确认各个组件都处于healthy状态。\n查看节点状态")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("centos@k8s-master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ kubectl get nodes\nNAME         STATUS     ROLES    AGE   VERSION\nk8s-master   NotReady   master   23m   v1.18.2\n")])])]),a("p",[t._v("可以看到，当前只存在1个master节点，并且这个节点的状态是 NotReady。\n使用 kubectl describe 命令来查看这个节点（Node）对象的详细信息、状态和事件（Event）：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("centos@k8s-master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ kubectl describe "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("node")]),t._v(" k8s-master \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("\nEvents:\n  Type    Reason                   Age                From                    Message\n  ----    ------                   ----               ----                    -------\n  Normal  Starting                 27m                kubelet, k8s-master     Starting kubelet.\n  Normal  NodeHasSufficientMemory  27m "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x3 over 27m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  kubelet, k8s-master     Node k8s-master status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    27m "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x3 over 27m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  kubelet, k8s-master     Node k8s-master status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     27m "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x2 over 27m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  kubelet, k8s-master     Node k8s-master status is now: NodeHasSufficientPID\n  Normal  NodeAllocatableEnforced  27m                kubelet, k8s-master     Updated Node Allocatable limit across pods\n  Normal  Starting                 27m                kubelet, k8s-master     Starting kubelet.\n  Normal  NodeHasSufficientMemory  27m                kubelet, k8s-master     Node k8s-master status is now: NodeHasSufficientMemory\n  Normal  NodeHasNoDiskPressure    27m                kubelet, k8s-master     Node k8s-master status is now: NodeHasNoDiskPressure\n  Normal  NodeHasSufficientPID     27m                kubelet, k8s-master     Node k8s-master status is now: NodeHasSufficientPID\n  Normal  NodeAllocatableEnforced  27m                kubelet, k8s-master     Updated Node Allocatable limit across pods\n  Normal  Starting                 27m                kube-proxy, k8s-master  Starting kube-proxy.\n")])])]),a("p",[t._v("通过 "),a("code",[t._v("kubectl describe")]),t._v(" 指令的输出，我们可以看到 "),a("code",[t._v("NodeNotReady")]),t._v(" 的原因在于，我们尚未部署任何网络插件，"),a("code",[t._v("kube-proxy")]),t._v(" 等组件还处于 "),a("code",[t._v("starting")]),t._v(" 状态。")]),t._v(" "),a("p",[t._v("另外，我们还可以通过 "),a("code",[t._v("kubectl")]),t._v(" 检查这个节点上各个系统 Pod 的状态，其中，"),a("code",[t._v("kube-system")]),t._v(" 是 Kubernetes 项目预留的系统 Pod 的工作空间（"),a("code",[t._v("Namespace")]),t._v("，注意它并不是 Linux Namespace，它只是 Kubernetes 划分不同工作空间的单位）：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("centos@k8s-master ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("$ kubectl get pod -n kube-system -o wide\nNAME                                 READY   STATUS    RESTARTS   AGE   IP                NODE         NOMINATED NODE   READINESS GATES\ncoredns-78d4cf999f-7jdx7             "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Pending   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          32m   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\ncoredns-78d4cf999f-s6mhk             "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("/1     Pending   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          32m   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("            "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\netcd-k8s-master                      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          32m   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".199.101   k8s-master   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nkube-apiserver-k8s-master            "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          32m   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".199.101   k8s-master   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nkube-controller-manager-k8s-master   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          32m   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".199.101   k8s-master   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nkube-proxy-cg29f                     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          32m   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".199.101   k8s-master   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nkube-scheduler-k8s-master            "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("          32m   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),t._v(".199.101   k8s-master   "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("none"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("可以看到，"),a("code",[t._v("CoreDNS")]),t._v(" 依赖于网络的 Pod 都处于 "),a("code",[t._v("Pending")]),t._v(" 状态，即调度失败。这当然是符合预期的：因为这个 Master 节点的网络尚未就绪。")]),t._v(" "),a("p",[t._v("至此主节点配置完成。")]),t._v(" "),a("h2",{attrs:{id:"kubeadm-init-的执行过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kubeadm-init-的执行过程"}},[t._v("#")]),t._v(" kubeadm init 的执行过程")]),t._v(" "),a("ul",[a("li",[t._v("init：指定版本进行初始化操作")]),t._v(" "),a("li",[t._v("preflight：初始化前的检查和下载所需要的 Docker 镜像文件")]),t._v(" "),a("li",[t._v("kubelet-start：生成 kubelet 的配置文件 "),a("code",[t._v("var/lib/kubelet/config.yaml")]),t._v("，没有这个文件 kubelet 无法启动，所以初始化之前的 kubelet 实际上启动不会成功")]),t._v(" "),a("li",[t._v("certificates：生成 Kubernetes 使用的证书，存放在 "),a("code",[t._v("/etc/kubernetes/pki")]),t._v(" 目录中")]),t._v(" "),a("li",[t._v("kubeconfig：生成 KubeConfig 文件，存放在 "),a("code",[t._v("/etc/kubernetes")]),t._v(" 目录中，组件之间通信需要使用对应文件")]),t._v(" "),a("li",[t._v("control-plane：使用 "),a("code",[t._v("/etc/kubernetes/manifest")]),t._v(" 目录下的 YAML 文件，安装 Master 组件")]),t._v(" "),a("li",[t._v("etcd：使用 "),a("code",[t._v("/etc/kubernetes/manifest/etcd.yaml")]),t._v(" 安装 Etcd 服务")]),t._v(" "),a("li",[t._v("wait-control-plane：等待 control-plan 部署的 Master 组件启动")]),t._v(" "),a("li",[t._v("apiclient：检查 Master 组件服务状态。")]),t._v(" "),a("li",[t._v("uploadconfig：更新配置")]),t._v(" "),a("li",[t._v("kubelet：使用 configMap 配置 kubelet")]),t._v(" "),a("li",[t._v("patchnode：更新 CNI 信息到 Node 上，通过注释的方式记录")]),t._v(" "),a("li",[t._v("mark-control-plane：为当前节点打标签，打了角色 Master，和不可调度标签，这样默认就不会使用 Master 节点来运行 Pod")]),t._v(" "),a("li",[t._v("bootstrap-token：生成 token 记录下来，后边使用 "),a("code",[t._v("kubeadm join")]),t._v(" 往集群中添加节点时会用到")]),t._v(" "),a("li",[t._v("addons：安装附加组件 CoreDNS 和 kube-proxy")])])])}),[],!1,null,null,null);s.default=n.exports}}]);