(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{602:function(t,a,s){"use strict";s.r(a);var e=s(29),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"ubuntu-安装-docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu-安装-docker"}},[t._v("#")]),t._v(" Ubuntu 安装 Docker")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("p",[t._v("切勿在没有配置 Docker APT 源的情况下直接使用 apt 命令安装 Docker.")])]),t._v(" "),s("h2",{attrs:{id:"准备工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备工作"}},[t._v("#")]),t._v(" 准备工作")]),t._v(" "),s("h3",{attrs:{id:"系统要求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#系统要求"}},[t._v("#")]),t._v(" 系统要求")]),t._v(" "),s("p",[t._v("Docker CE 支持以下版本的 "),s("a",{attrs:{href:"https://www.ubuntu.com/server",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ubuntu"),s("OutboundLink")],1),t._v(" 操作系统：")]),t._v(" "),s("ul",[s("li",[t._v("Ubuntu Focal 20.04 (LTS)")]),t._v(" "),s("li",[t._v("Ubuntu Bionic 18.04 (LTS)")])]),t._v(" "),s("p",[t._v("Docker CE 可以安装在 64 位的 x86 平台或 ARM 平台上。Ubuntu 发行版中，LTS（Long-Term-Support）长期支持版本，会获得 5 年的升级维护支持，这样的版本会更稳定，因此在生产环境中推荐使用 LTS 版本,当前最新的 LTS 版本为 Ubuntu 20.04。")]),t._v(" "),s("h3",{attrs:{id:"关闭swap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关闭swap"}},[t._v("#")]),t._v(" 关闭swap")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("swapoff -a\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("yes")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" /etc/fstab /etc/fstab_bak\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" /etc/fstab_bak "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" -v swap "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" /etc/fstab\n")])])]),s("p",[t._v("使用"),s("code",[t._v("free -h")]),t._v("命令检查配置是否生效")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("div",{staticClass:"highlight-lines"},[s("br"),s("br"),s("br"),s("div",{staticClass:"highlighted"},[t._v(" ")]),s("br")]),s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v(" -h   \n              total        used        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v("      shared  buff/cache   available\nMem:           "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".8G        142M        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".5G        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(".5M        122M        "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".5G\nSwap:            0B          0B          0B\n")])])]),s("h3",{attrs:{id:"卸载旧版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#卸载旧版本"}},[t._v("#")]),t._v(" 卸载旧版本")]),t._v(" "),s("p",[t._v("旧版本的 Docker 称为 "),s("code",[t._v("docker")]),t._v("，"),s("code",[t._v("docker.io")]),t._v(" 或者 "),s("code",[t._v("docker-engine")]),t._v("，使用以下命令卸载旧版本：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" remove "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" docker-engine docker.io containerd runc\n")])])]),s("h3",{attrs:{id:"支持的存储驱动程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#支持的存储驱动程序"}},[t._v("#")]),t._v(" 支持的存储驱动程序")]),t._v(" "),s("p",[t._v("Ubuntu 16.04 + 上的 Docker CE 默认使用 "),s("code",[t._v("overlay2")]),t._v(" 存储层驱动,无需手动配置。")]),t._v(" "),s("h2",{attrs:{id:"使用存储库安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用存储库安装"}},[t._v("#")]),t._v(" 使用存储库安装")]),t._v(" "),s("p",[t._v("在新主机上首次安装Docker引擎之前，需要设置Docker存储库。之后，您可以从存储库安装和更新Docker。")]),t._v(" "),s("h3",{attrs:{id:"设置存储库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置存储库"}},[t._v("#")]),t._v(" 设置存储库")]),t._v(" "),s("p",[t._v("Step 1 : 更新apt程序包索引并安装程序包，以允许apt通过HTTPS使用存储库：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    apt-transport-https "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    ca-certificates "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    gnupg-agent "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n    software-properties-common\n")])])]),s("p",[t._v("Step 2 : 添加阿里云的官方GPG密钥：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" apt-key "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -\n")])])]),s("p",[t._v("Step 3 :  验证 GPG 证书")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" apt-key fingerprint 0EBFCD88\n\npub   rsa4096 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2017")]),t._v("-02-22 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("SCEA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n      9DC8 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5822")]),t._v(" 9FC7 DD38 854A  E2D8 8D81 803C 0EBF CD88\nuid           "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" unknown"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Docker Release "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CE deb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("docker@docker.com"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nsub   rsa4096 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2017")]),t._v("-02-22 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("S"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("Step 4 :  写入软件源信息")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" add-apt-repository "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu \\\n   '),s("span",{pre:!0,attrs:{class:"token variable"}},[s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("lsb_release -cs"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v(' \\\n   stable"')]),t._v("\n")])])]),s("h3",{attrs:{id:"更新并安装-docker-ce"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新并安装-docker-ce"}},[t._v("#")]),t._v(" 更新并安装 Docker CE")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" update\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" docker-ce docker-ce-cli containerd.io\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("以上命令会添加稳定版本的 Docker CE APT 镜像源，如果需要最新或者测试版本的 Docker CE 请将 stable 改为 edge 或者 test。从 Docker 17.06 开始，edge test 版本的 APT 镜像源也会包含稳定版本的 Docker。")])]),t._v(" "),s("h2",{attrs:{id:"使用脚本自动安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用脚本自动安装"}},[t._v("#")]),t._v(" 使用脚本自动安装")]),t._v(" "),s("p",[t._v("在测试或开发环境中 Docker 官方为了简化安装流程，提供了一套便捷的安装脚本，Ubuntu 系统上可以使用这套脚本安装：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -fsSL https://get.docker.com -o get-docker.sh\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sh")]),t._v(" get-docker.sh\n")])])]),s("p",[t._v("执行这个命令后，脚本就会自动的将一切准备工作做好，并且把 Docker CE 的 Edge 版本安装在系统中。")]),t._v(" "),s("h2",{attrs:{id:"启动-docker-ce"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动-docker-ce"}},[t._v("#")]),t._v(" 启动 Docker CE")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("enable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" systemctl start "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("\n")])])]),s("h2",{attrs:{id:"建立-docker-用户组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#建立-docker-用户组"}},[t._v("#")]),t._v(" 建立 docker 用户组")]),t._v(" "),s("p",[t._v("默认情况下，"),s("code",[t._v("docker")]),t._v(" 命令会使用 "),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Unix_domain_socket",target:"_blank",rel:"noopener noreferrer"}},[t._v("Unix socket"),s("OutboundLink")],1),t._v(" 与 Docker 引擎通讯。而只有 "),s("code",[t._v("root")]),t._v(" 用户和 "),s("code",[t._v("docker")]),t._v(" 组的用户才可以访问 Docker 引擎的 Unix socket。出于安全考虑，一般 Linux 系统上不会直接使用 "),s("code",[t._v("root")]),t._v(" 用户。因此，更好地做法是将需要使用 "),s("code",[t._v("docker")]),t._v(" 的用户加入 "),s("code",[t._v("docker")]),t._v(" 用户组。")]),t._v(" "),s("p",[t._v("建立 "),s("code",[t._v("docker")]),t._v(" 组：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("groupadd")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v("\n")])])]),s("p",[t._v("将当前用户加入 "),s("code",[t._v("docker")]),t._v(" 组：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("usermod")]),t._v(" -aG "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("$USER")]),t._v("\n")])])]),s("p",[t._v("退出当前终端并重新登录，进行如下测试。")]),t._v(" "),s("h2",{attrs:{id:"测试-docker-是否安装正确"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#测试-docker-是否安装正确"}},[t._v("#")]),t._v(" 测试 Docker 是否安装正确")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run hello-world\n\nUnable to "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),t._v(" image "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello-world:latest'")]),t._v(" locally\nlatest: Pulling from library/hello-world\nca4f61b1923c: Pull complete\nDigest: sha256:be0cd392e45be79ffeffa6b05338b98ebb16c87b255f48e297ec7f98e123905c\nStatus: Downloaded newer image "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" hello-world:latest\n\nHello from Docker"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\nThis message shows that your installation appears to be working correctly.\n\nTo generate this message, Docker took the following steps:\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(". The Docker client contacted the Docker daemon.\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(". The Docker daemon pulled the "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello-world"')]),t._v(" image from the Docker Hub.\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("amd64"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(". The Docker daemon created a new container from that image "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" runs the\n    executable that produces the output you are currently reading.\n "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(". The Docker daemon streamed that output to the Docker client, "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("which")]),t._v(" sent it\n    to your terminal.\n\nTo try something "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" ambitious, you can run an Ubuntu container with:\n "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run -it ubuntu "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bash")]),t._v("\n\nShare images, automate workflows, and "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" with a "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("free")]),t._v(" Docker ID:\n https://cloud.docker.com/\n\nFor "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" examples and ideas, visit:\n https://docs.docker.com/engine/userguide/\n")])])]),s("p",[t._v("若能正常输出以上信息，则说明安装成功。")]),t._v(" "),s("h2",{attrs:{id:"镜像加速"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#镜像加速"}},[t._v("#")]),t._v(" 镜像加速")]),t._v(" "),s("p",[t._v("鉴于国内网络问题，后续拉取 Docker 镜像十分缓慢，强烈建议安装 Docker 之后配置 "),s("code",[t._v("国内镜像加速")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"常见问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见问题"}},[t._v("#")]),t._v(" 常见问题")]),t._v(" "),s("p",[t._v("docker info指令报若下错误："),s("code",[t._v("WARNING: No memory limit support")]),t._v(" 或 "),s("code",[t._v("WARNING: No swap limit support")])]),t._v(" "),s("p",[t._v("解决方法：")]),t._v(" "),s("p",[t._v("1、打开"),s("code",[t._v("/etc/default/grub")]),t._v("文件，添加如下内容：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vim")]),t._v(" /etc/default/grub\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GRUB_CMDLINE_LINUX")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cgroup_enable=memory swapaccount=1"')]),t._v("\n")])])]),s("p",[t._v("2、更新grub")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("update-grub")]),t._v("\n")])])]),s("p",[t._v("3、重启系统")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("reboot")]),t._v("\n")])])]),s("h2",{attrs:{id:"卸载-docker-engine"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#卸载-docker-engine"}},[t._v("#")]),t._v(" 卸载 Docker Engine")]),t._v(" "),s("ol",[s("li",[t._v("Uninstall the Docker Engine, CLI, and Containerd packages:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt-get")]),t._v(" purge docker-ce docker-ce-cli containerd.io\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("Images, containers, volumes, or customized configuration files on your host are not automatically removed. To delete all images, containers, and volumes:")])]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" -rf /var/lib/docker\n")])])]),s("p",[t._v("You must delete any edited configuration files manually.")]),t._v(" "),s("h2",{attrs:{id:"参考文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[t._v("#")]),t._v(" 参考文档")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://docs.docker.com/install/linux/docker-ce/ubuntu/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker 官方 Ubuntu 安装文档"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);