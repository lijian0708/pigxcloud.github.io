(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{554:function(t,s,a){"use strict";a.r(s);var n=a(29),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"nginx-location正则写法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-location正则写法"}},[t._v("#")]),t._v(" Nginx location正则写法")]),t._v(" "),a("h2",{attrs:{id:"匹配符号说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匹配符号说明"}},[t._v("#")]),t._v(" 匹配符号说明")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("表达式")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("^~")]),t._v(" "),a("td",[t._v("标识符匹配后面跟一个字符串。匹配字符串后将停止对后续的正则表达式进行匹配。")])]),t._v(" "),a("tr",[a("td",[t._v("=")]),t._v(" "),a("td",[t._v("精准匹配，如location=/，只会匹配url为/的请求。")])]),t._v(" "),a("tr",[a("td",[t._v("~")]),t._v(" "),a("td",[t._v("区分大小写的匹配。")])]),t._v(" "),a("tr",[a("td",[t._v("~*")]),t._v(" "),a("td",[t._v("不区分大小写的匹配。")])]),t._v(" "),a("tr",[a("td",[t._v("!~")]),t._v(" "),a("td",[t._v("对区分大小写的匹配取非。")])]),t._v(" "),a("tr",[a("td",[t._v("!~*")]),t._v(" "),a("td",[t._v("对不区分大小写的匹配取非。")])]),t._v(" "),a("tr",[a("td",[t._v("/")]),t._v(" "),a("td",[t._v("通用匹配，如果没有其它匹配,任何请求都会被匹配到")])])])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("如 location ^~ /images/ ， 在匹配了/images/ 这个字符串后就停止对后续的正则匹配")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[a("strong",[t._v("匹配顺序优先级：")]),t._v("\n（location =）> (location 完整路径）> (location ^~ 路径) > (location ~，~*正则顺序) >(location 部分起始位置) > （/）")])]),t._v(" "),a("h2",{attrs:{id:"正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("表达式")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("*")]),t._v(" "),a("td",[t._v("重复前面的字符0次或多次")])]),t._v(" "),a("tr",[a("td",[t._v("？")]),t._v(" "),a("td",[t._v("重复前面的字符0次或1次")])]),t._v(" "),a("tr",[a("td",[t._v("+")]),t._v(" "),a("td",[t._v("重复前面的字符1次或多次")])]),t._v(" "),a("tr",[a("td",[t._v(".")]),t._v(" "),a("td",[t._v("匹配除换行符以外的任意一个字符")])]),t._v(" "),a("tr",[a("td",[t._v("(a|b)")]),t._v(" "),a("td",[t._v("匹配a或b")])]),t._v(" "),a("tr",[a("td",[t._v("^")]),t._v(" "),a("td",[t._v("以...开头")])]),t._v(" "),a("tr",[a("td",[t._v("$")]),t._v(" "),a("td",[t._v("以...结尾")])]),t._v(" "),a("tr",[a("td",[t._v("{n}")]),t._v(" "),a("td",[t._v("重复前面的字符n次")])]),t._v(" "),a("tr",[a("td",[t._v("{n,}")]),t._v(" "),a("td",[t._v("重复前面的字符n次或更多次")])]),t._v(" "),a("tr",[a("td",[t._v("{n，m}")]),t._v(" "),a("td",[t._v("重复前面的字符n-m次")])]),t._v(" "),a("tr",[a("td",[t._v("*？")]),t._v(" "),a("td",[t._v("重复前面的字符0次或多次，但尽可能少重复")])]),t._v(" "),a("tr",[a("td",[t._v("+？")]),t._v(" "),a("td",[t._v("重复前面的字符1次或多次，但尽可能少重复")])]),t._v(" "),a("tr",[a("td",[t._v("？？")]),t._v(" "),a("td",[t._v("重复前面的字符0次或1次，但尽可能少重复")])]),t._v(" "),a("tr",[a("td",[t._v("{n，m}？")]),t._v(" "),a("td",[t._v("重复前面的字符n-m次，但尽可能少重复")])]),t._v(" "),a("tr",[a("td",[t._v("{n}？")]),t._v(" "),a("td",[t._v("重复前面的字符n次以上，但尽可能少重复")])])])]),t._v(" "),a("h2",{attrs:{id:"正则表达式补充"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式补充"}},[t._v("#")]),t._v(" 正则表达式补充")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("表达式")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("\\W")]),t._v(" "),a("td",[t._v("匹配任意不是字母，数字，下划线，汉字的字符（特殊符号）")])]),t._v(" "),a("tr",[a("td",[t._v("\\S")]),t._v(" "),a("td",[t._v("匹配任意不是空白符的字符")])]),t._v(" "),a("tr",[a("td",[t._v("\\D")]),t._v(" "),a("td",[t._v("匹配任意非数字的字符")])]),t._v(" "),a("tr",[a("td",[t._v("\\B")]),t._v(" "),a("td",[t._v("匹配任意不是单词开头或结尾的位置")])]),t._v(" "),a("tr",[a("td",[t._v("[a]")]),t._v(" "),a("td",[t._v("匹配单个字符a")])]),t._v(" "),a("tr",[a("td",[t._v("[a-z]")]),t._v(" "),a("td",[t._v("匹配a-z小写字符的任意一个")])]),t._v(" "),a("tr",[a("td",[t._v("[^a]")]),t._v(" "),a("td",[t._v("匹配除了a以外的任意字符")])]),t._v(" "),a("tr",[a("td",[t._v("[^abc]")]),t._v(" "),a("td",[t._v("匹配除了abc这几个字母以外的任意字符")])])])]),t._v(" "),a("h3",{attrs:{id:"实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[t._v("#")]),t._v(" 实例")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v("  = /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 精确匹配 / ，主机名后面不能带任何字符串")]),t._v("\n  [ configuration A ] \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v("  /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 因为所有的地址都以 / 开头，所以这条规则将匹配到所有请求")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 但是正则和最长字符串会优先匹配")]),t._v("\n  [ configuration B ] \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /documents/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 只有后面的正则表达式没有匹配到时，这一条才会采用这一条")]),t._v("\n  [ configuration C ] \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~ /documents/Abc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配任何以 /documents/ 开头的地址，匹配符合以后，还要继续往下搜索")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 只有后面的正则表达式没有匹配到时，这一条才会采用这一条")]),t._v("\n  [ configuration CC ] \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ^~ /images/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配任何以 /images/ 开头的地址，匹配符合以后，停止往下搜索正则，采用这一条。")]),t._v("\n  [ configuration D ] \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~* \\.(gif|jpg|jpeg)$")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 匹配所有以 gif,jpg或jpeg 结尾的请求")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 然而，所有请求 /images/ 下的图片会被 config D 处理，因为 ^~ 到达不了这一条正则")]),t._v("\n  [ configuration E ] \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /images/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 字符匹配到 /images/，继续往下，会发现 ^~ 存在")]),t._v("\n  [ configuration F ] \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /images/abc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 最长字符匹配到 /images/abc，继续往下，会发现 ^~ 存在")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# F与G的放置顺序是没有关系的")]),t._v("\n  [ configuration G ] \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~ /images/abc/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 只有去掉 config D 才有效：先最长匹配 config G 开头的地址，继续往下搜索，匹配到这一条正则，采用")]),t._v("\n    [ configuration H ] \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nlocation ~* /js/.*/\\.js\n")])])]),a("ol",[a("li",[t._v("已"),a("code",[t._v("=")]),t._v("开头表示精确匹配")]),t._v(" "),a("li",[t._v("如 A 中只匹配根目录结尾的请求，后面不能带任何字符串。")]),t._v(" "),a("li",[a("code",[t._v("^~")]),t._v(" 开头表示uri以某个常规字符串开头，不是正则匹配")]),t._v(" "),a("li",[t._v("~ 开头表示区分大小写的正则匹配;")]),t._v(" "),a("li",[t._v("~* 开头表示不区分大小写的正则匹配")]),t._v(" "),a("li",[t._v("/ 通用匹配, 如果没有其它匹配,任何请求都会匹配到")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("顺序 no优先级：\n(location =) > (location 完整路径) > (location ^~ 路径) > (location ~,~* 正则顺序) > (location 部分起始路径) > (/)")])]),t._v(" "),a("p",[t._v("上面的匹配结果\n按照上面的location写法，以下的匹配示例成立：")]),t._v(" "),a("ul",[a("li",[a("strong",[a("code",[t._v("/ -> config A")]),t._v(" ：精确完全匹配，即使/index.html也匹配不了")])]),t._v(" "),a("li",[a("strong",[a("code",[t._v("/downloads/download.html -> config B")]),t._v(" ：匹配B以后，往下没有任何匹配，采用B")])]),t._v(" "),a("li",[a("strong",[a("code",[t._v("/images/1.gif -> configuration D")]),t._v(" ：匹配到F，往下匹配到D，停止往下")])]),t._v(" "),a("li",[a("strong",[a("code",[t._v("/images/abc/def -> config D")]),t._v("：最长匹配到G，往下匹配D，停止往下你可以看到 任何以/images/开头的都会匹配到D并停止，FG写在这里是没有任何意义的，H是永远轮不到的，这里只是为了说明匹配顺序")])]),t._v(" "),a("li",[a("strong",[a("code",[t._v("/documents/document.html -> config C")]),t._v(" ：匹配到C，往下没有任何匹配，采用C")])]),t._v(" "),a("li",[a("strong",[a("code",[t._v("/documents/1.jpg -> configuration E")]),t._v(" ：匹配到C，往下正则匹配到E")])]),t._v(" "),a("li",[a("strong",[a("code",[t._v("/documents/Abc.jpg -> config CC")]),t._v(" ：最长匹配到C，往下正则顺序匹配到CC，不会往下到E")])])]),t._v(" "),a("h3",{attrs:{id:"实际使用建议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实际使用建议"}},[t._v("#")]),t._v(" 实际使用建议")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[t._v("所以实际使用中，个人觉得至少有三个匹配规则定义，如下：\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#直接匹配网站根，通过域名访问网站首页比较频繁，使用这个会加速处理，官网如是说。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这里是直接转发给后端应用服务器了，也可以是一个静态首页")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第一个必选规则")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" = /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    proxy_pass http://tomcat:8080/index\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 第二个必选规则是处理静态文件请求，这是nginx作为http服务器的强项")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 有两种配置模式，目录匹配或后缀匹配,任选其一或搭配使用")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ^~ /static/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /webroot/static/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~* \\.(gif|jpg|jpeg|png|css|js|ico)$")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /webroot/res/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#第三个规则就是通用规则，用来转发动态请求到后端应用服务器")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#非静态文件请求就默认是动态请求，自己根据实际把握")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#毕竟目前的一些框架的流行，带.php,.jsp后缀的情况很少了")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    proxy_pass http://tomcat:8080/\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("a",{attrs:{href:"http://tengine.taobao.org/book/chapter_02.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://tengine.taobao.org/book/chapter_02.html"),a("OutboundLink")],1),t._v(" "),a("a",{attrs:{href:"http://nginx.org/en/docs/http/ngx_http_rewrite_module.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://nginx.org/en/docs/http/ngx_http_rewrite_module.html"),a("OutboundLink")],1)]),t._v(" "),a("h1",{attrs:{id:"rewrite规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rewrite规则"}},[t._v("#")]),t._v(" Rewrite规则")]),t._v(" "),a("p",[t._v("rewrite功能就是，使用nginx提供的全局变量或自己设置的变量，结合正则表达式和标志位实现url重写以及重定向。"),a("strong",[t._v("rewrite只能放在server{},location{},if{}中")]),t._v("，并且只能对域名后边的除去传递的参数外的字符串起作用，例如 "),a("code",[t._v("http://seanlook.com/a/we/index.php?id=1&u=str")]),t._v(" 只对/a/we/index.php重写。语法"),a("code",[t._v("rewrite regex replacement [flag];")])]),t._v(" "),a("p",[t._v("如果相对域名或参数字符串起作用，可以使用全局变量匹配，也可以使用proxy_pass反向代理。")]),t._v(" "),a("p",[t._v("表面看rewrite和location功能有点像，都能实现跳转，主要区别在于rewrite是在同一域名内更改获取资源的路径，而location是对一类路径做控制访问或反向代理，可以proxy_pass到其他机器。很多情况下rewrite也会写在location里，它们的执行顺序是：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("执行server块的rewrite指令")])]),t._v(" "),a("li",[a("strong",[t._v("执行location匹配")])]),t._v(" "),a("li",[a("strong",[t._v("执行选定的location中的rewrite指令")])])]),t._v(" "),a("p",[t._v("如果其中某步URI被重写，则重新循环执行1-3，直到找到真实存在的文件；"),a("strong",[t._v("循环超过10次，则返回500 Internal Server Error错误。")])]),t._v(" "),a("h2",{attrs:{id:"flag标志位"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flag标志位"}},[t._v("#")]),t._v(" flag标志位")]),t._v(" "),a("ul",[a("li",[a("strong",[a("code",[t._v("last")]),t._v(" : 相当于Apache的[L]标记，表示完成rewrite")])]),t._v(" "),a("li",[a("strong",[a("code",[t._v("break")]),t._v(" : 停止执行当前虚拟主机的后续rewrite指令集")])]),t._v(" "),a("li",[a("strong",[a("code",[t._v("redirect")]),t._v(" : 返回302临时重定向，地址栏会显示跳转后的地址")])]),t._v(" "),a("li",[a("strong",[a("code",[t._v("permanent")]),t._v(" : 返回301永久重定向，地址栏会显示跳转后的地址")])])]),t._v(" "),a("p",[t._v("因为301和302不能简单的只返回状态码，还必须有重定向的URL，这就是return指令无法返回301,302的原因了。这里 last 和 break 区别有点难以理解：")]),t._v(" "),a("ol",[a("li",[t._v("last一般写在server和if中，而break一般使用在location中")]),t._v(" "),a("li",[t._v("last不终止重写后的url匹配，即新的url会再从server走一遍匹配流程，而break终止重写后的匹配")]),t._v(" "),a("li",[t._v("break和last都能组织继续执行后面的rewrite指令")])]),t._v(" "),a("h2",{attrs:{id:"if指令与全局变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if指令与全局变量"}},[t._v("#")]),t._v(" if指令与全局变量")]),t._v(" "),a("p",[t._v("if判断指令\n语法为"),a("code",[t._v("if(condition){...}")]),t._v("，对给定的条件condition进行判断。如果为真，大括号内的rewrite指令将被执行，if条件(conditon)可以是如下任何内容：")]),t._v(" "),a("ul",[a("li",[t._v("当表达式只是一个变量时，如果值为空或任何以0开头的字符串都会当做false")]),t._v(" "),a("li",[t._v("直接比较变量和内容时，使用"),a("code",[t._v("=")]),t._v("或"),a("code",[t._v("!=")])]),t._v(" "),a("li",[a("code",[t._v("~")]),t._v("正则表达式匹配，"),a("code",[t._v("~*")]),t._v("不区分大小写的匹配，"),a("code",[t._v("!~")]),t._v("区分大小写的不匹配")])]),t._v(" "),a("p",[a("code",[t._v("-f")]),t._v("和"),a("code",[t._v("!-f")]),t._v("用来判断是否存在文件\n"),a("code",[t._v("-d")]),t._v("和"),a("code",[t._v("!-d")]),t._v("用来判断是否存在目录\n"),a("code",[t._v("-e")]),t._v("和"),a("code",[t._v("!-e")]),t._v("用来判断是否存在文件或目录\n"),a("code",[t._v("-x")]),t._v("和"),a("code",[t._v("!-x")]),t._v("用来判断文件是否可执行")]),t._v(" "),a("p",[t._v("例如：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_user_agent")]),t._v(" ~ MSIE)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" ^(.*)$ /msie/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v(" break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(' //如果UA包含"MSIE"，rewrite请求到/msid/目录下\n\n'),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$http_cookie")]),t._v(" ~* "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"id=([^;]+)(?:;|$)"')]),t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$id")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" //如果cookie匹配正则，设置变量$id等于正则引用部分\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_method")]),t._v(" = POST)")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("405")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" //如果提交方法为POST，则返回状态405（Method "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" allowed）。return不能返回301,302\n\nif ("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$slow")]),t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("limit_rate")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10k")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" //限速，$slow可以通过 "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" 指令设置\n\nif (!-f "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$request_filename")]),t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("proxy_pass")]),t._v("  http://127.0.0.1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" //如果请求的文件名不存在，则反向代理到localhost 。这里的break也是停止rewrite检查\n\n"),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$args")]),t._v(" ~ post=140)")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" ^ http://example.com/ permanent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" //如果query "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v('string中包含"post=140"，永久重定向到example.com')]),t._v("\n\nlocation ~* \\.(gif|jpg|png|swf|flv)$")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("valid_referers")]),t._v(" none blocked www.jefflei.com www.leizhenfang.com")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ("),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$invalid_referer")]),t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" //防盗链\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"rewrite实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rewrite实例"}},[t._v("#")]),t._v(" rewrite实例")]),t._v(" "),a("p",[t._v("例1：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("http")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义image日志格式")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("log_format")]),t._v(" imagelog "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'["),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$time_local]")]),t._v(" '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$image_file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$image_type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$body_bytes_sent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$status")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 开启重写日志")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite_log")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("on")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("server")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /home/www")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重写规则信息")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("error_log")]),t._v(" logs/rewrite.log notice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意这里要用‘’单引号引起来，避免{}")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^/images/([a-z]{2})/([a-z0-9]{5})/(.*)\\.(png|jpg|gif)$'")]),t._v(" /data?file="),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$3")]),t._v("."),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$4")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意不能在上面这条规则后面加上“last”参数，否则下面的set指令不会执行")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$image_file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$3")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$image_type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$4")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" /data")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定针对图片的日志格式，来分析图片类型和大小")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("access_log")]),t._v(" logs/images.log mian")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("root")]),t._v(" /data/images")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 应用前面定义的变量。判断首先文件在不在，不在再判断目录在不在，如果还不在就跳转到最后一个url里")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try_files")]),t._v(" /"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$arg_file")]),t._v(" /image404.html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" = /image404.html")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 图片不存在返回特定的信息")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"image not found'),a("span",{pre:!0,attrs:{class:"token escape entity"}},[t._v("\\n")]),t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("对形如"),a("code",[t._v("/images/ef/uh7b3/test.png")]),t._v("的请求，重写到"),a("code",[t._v("/data?file=test.png")]),t._v("，于是匹配到"),a("code",[t._v("location /data")]),t._v("，先看"),a("code",[t._v("/data/images/test.png")]),t._v("文件存不存在，如果存在则正常响应，如果不存在则重写tryfiles到新的image404 location，直接返回404状态码。")]),t._v(" "),a("p",[t._v("例2：")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite")]),t._v(" ^/images/(.*)_(\\d+)x(\\d+)\\.(png|jpg|gif)$ /resizer/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$1")]),t._v("."),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$4")]),t._v("?width="),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$2")]),t._v("&height="),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$3")]),t._v("? last")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("对形如"),a("code",[t._v("/images/bla_500x400.jpg")]),t._v("的文件请求，重写到"),a("code",[t._v("/resizer/bla.jpg?width=500&height=400")]),t._v("地址，并会继续尝试匹配location。")]),t._v(" "),a("p",[t._v("这个location")]),t._v(" "),a("div",{staticClass:"language-nginx extra-class"},[a("pre",{pre:!0,attrs:{class:"language-nginx"}},[a("code",[a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("location")]),t._v(" ~ ^/(.+)\\.3gp\\.zip$")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# access_by_lua_file  "/opt/pro/nginx/lua/zip_access.lua";')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token directive"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("rewrite_by_lua_file")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/opt/pro/nginx/lua/zip_access.lua"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("匹配 "),a("code",[t._v("https://www.ivoov.com/vod/ts01/TVM/video/3gp/TVM/HuNanHD/2016/04/27/80a4b71a-c000-46fa-916b-70d9e2445635/Q350/Q350.3gp.zip?&end=5")])])])}),[],!1,null,null,null);s.default=e.exports}}]);