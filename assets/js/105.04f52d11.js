(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{574:function(e,r,o){"use strict";o.r(r);var t=o(29),a=Object(t.a)({},(function(){var e=this,r=e.$createElement,o=e._self._c||r;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"使用docker-swarm部署minio"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#使用docker-swarm部署minio"}},[e._v("#")]),e._v(" 使用Docker Swarm部署Minio")]),e._v(" "),o("p",[e._v("Docker Engine在Swarm模式下提供集群管理和编排功能。 Minio服务器可以在Swarm的分布式模式下轻松部署，创建一个多租户，高可用性和可扩展的对象存储。")]),e._v(" "),o("p",[e._v("从"),o("a",{attrs:{href:"https://blog.docker.com/2017/01/whats-new-in-docker-1-13/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker Engine v1.13.0"),o("OutboundLink")],1),e._v(" (Docker Compose v3.0)开始, Docker Swarm和Compose 二者"),o("a",{attrs:{href:"https://docs.docker.com/compose/compose-file/#version-3",target:"_blank",rel:"noopener noreferrer"}},[e._v("cross-compatible"),o("OutboundLink")],1),e._v("。这允许将Compose file用作在Swarm上部署服务的模板。 我们使用Docker Compose file创建分布式Minio设置。")]),e._v(" "),o("h2",{attrs:{id:"_1-前提条件"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1-前提条件"}},[e._v("#")]),e._v(" 1. 前提条件")]),e._v(" "),o("ul",[o("li",[o("p",[e._v("熟悉"),o("a",{attrs:{href:"https://docs.docker.com/engine/swarm/key-concepts/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Swarm mode key concepts"),o("OutboundLink")],1),e._v(".")])]),e._v(" "),o("li",[o("p",[e._v("Docker engine v1.13.0运行在[networked host machines]集群上(")]),e._v(" "),o("p",[e._v("https://docs.docker.com/engine/swarm/swarm-tutorial/#/three-networked-host-machines")]),e._v(" "),o("p",[e._v(").")]),e._v(" "),o("h2",{attrs:{id:"_2-创建swarm"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建swarm"}},[e._v("#")]),e._v(" 2. 创建Swarm")])])]),e._v(" "),o("p",[e._v("在管理节点上创建一个swarm,请运行下面的命令")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("docker swarm init --advertise-addr <MANAGER-IP>\n")])])]),o("p",[e._v("一旦swarm初使化了，你可以看到下面的响应信息")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("docker swarm join \\  --token  SWMTKN-1-49nj1cmql0jkz5s954yi3oex3nedyz0fb0xx14ie39trti4wxv-8vxv8rssmk743ojnwacrr2e7c \\  192.168.99.100:2377\n")])])]),o("p",[e._v("你现在可以运行上述命令"),o("a",{attrs:{href:"https://docs.docker.com/engine/swarm/swarm-tutorial/add-nodes/",target:"_blank",rel:"noopener noreferrer"}},[e._v("添加worker节点"),o("OutboundLink")],1),e._v("到swarm。更多关于创建swarm的细节步骤，请访问"),o("a",{attrs:{href:"https://docs.docker.com/engine/swarm/swarm-tutorial/create-swarm/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker documentation site"),o("OutboundLink")],1),e._v(".")]),e._v(" "),o("h2",{attrs:{id:"_3-为minio创建docker-secret"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_3-为minio创建docker-secret"}},[e._v("#")]),e._v(" 3. 为Minio创建Docker secret")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v('echo "AKIAIOSFODNN7EXAMPLE" | docker secret create access_key -echo "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY" | docker secret create secret_key -\n')])])]),o("h2",{attrs:{id:"_4-部署分布式minio服务"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_4-部署分布式minio服务"}},[e._v("#")]),e._v(" 4. 部署分布式minio服务")]),e._v(" "),o("p",[e._v("在你的Swarm master上下载"),o("a",{attrs:{href:"https://github.com/minio/minio/blob/master/docs/orchestration/docker-swarm/docker-compose-secrets.yaml?raw=true",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker Compose file"),o("OutboundLink")],1),e._v(" ，然后运行下面的命令")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("docker stack deploy --compose-file=docker-compose-secrets.yaml minio_stack\n")])])]),o("p",[e._v("这将把Compose file里描述的服务部署为Docker stack"),o("code",[e._v("minio_stack")]),e._v("。 更多 "),o("code",[e._v("docker stack")]),e._v(" "),o("a",{attrs:{href:"https://docs.docker.com/engine/reference/commandline/stack/",target:"_blank",rel:"noopener noreferrer"}},[e._v("命令参考"),o("OutboundLink")],1),e._v("。")]),e._v(" "),o("p",[e._v("在stack成功部署之后，你可以通过"),o("a",{attrs:{href:"https://docs.min.io/docs/minio-client-complete-guide",target:"_blank",rel:"noopener noreferrer"}},[e._v("Minio Client"),o("OutboundLink")],1),e._v(" "),o("code",[e._v("mc")]),e._v(" 或者浏览器访问http://[Node_Public_IP_Address]:[Expose_Port_on_Host]来访问你的Minio server。")]),e._v(" "),o("h2",{attrs:{id:"_4-删除分布式minio-services"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_4-删除分布式minio-services"}},[e._v("#")]),e._v(" 4. 删除分布式Minio services")]),e._v(" "),o("p",[e._v("删除分布式Minio services以及相关的网络，请运行下面的命令")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("docker stack rm minio_stack\n")])])]),o("p",[e._v("Swarm不会自动删除为Minio服务创建的host volumes,如果下次新的Minio服务不熟到swarm上，可能会导致损坏。因此，我们建议手动删除所有Minio使用的volumes。为此，到每一个swarm的节点上，列出所有的volumes")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("docker volume ls\n")])])]),o("p",[e._v("然后删除"),o("code",[e._v("minio_stack")]),e._v(" volumes")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("docker volume rm volume_name \n")])])]),o("h3",{attrs:{id:"注意事项"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[e._v("#")]),e._v(" 注意事项")]),e._v(" "),o("ul",[o("li",[e._v("默认情况下Docker Compose file使用的是最新版的Minio server的Docker镜像，你可以修改image tag来拉取指定版本的"),o("a",{attrs:{href:"https://hub.docker.com/r/minio/minio/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Minio Docker image"),o("OutboundLink")],1),e._v(".")]),e._v(" "),o("li",[e._v("默认情况下会创建4个minio实例，你可以添加更多的Minio服务（最多总共16个）到你的Minio Comose deployment。添加一个服务\n"),o("ul",[o("li",[e._v("复制服务定义并适当地更改新服务的名称。")]),e._v(" "),o("li",[e._v("更新每个服务中的命令部分。")]),e._v(" "),o("li",[e._v("更新要为新服务公开的端口号。 另外，请确保分配给新服务的端口尚未使用。\n关于分布式Minio的更多资料，请访问"),o("a",{attrs:{href:"https://docs.min.io/docs/distributed-minio-quickstart-guide",target:"_blank",rel:"noopener noreferrer"}},[e._v("这里"),o("OutboundLink")],1),e._v(".")])])]),e._v(" "),o("li",[e._v("默认情况下，Minio服务使用的是local volume driver. 更多配置选项，请访问"),o("a",{attrs:{href:"https://docs.docker.com/compose/compose-file/#/volume-configuration-reference",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker documentation"),o("OutboundLink")],1),e._v(" 。")]),e._v(" "),o("li",[e._v("Docker compose file中的Minio服务使用的端口是9001到9004，这允许多个服务在主机上运行。更多配置选项，请访问"),o("a",{attrs:{href:"https://docs.docker.com/compose/compose-file/#/ports",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker documentation"),o("OutboundLink")],1),e._v(".")]),e._v(" "),o("li",[e._v("Docker Swarm默认使用的是ingress做负载均衡，你可以跟据需要配置"),o("a",{attrs:{href:"https://docs.docker.com/engine/swarm/ingress/#/configure-an-external-load-balancer",target:"_blank",rel:"noopener noreferrer"}},[e._v("external load balancer based"),o("OutboundLink")],1),e._v("。")])]),e._v(" "),o("h3",{attrs:{id:"了解更多"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#了解更多"}},[e._v("#")]),e._v(" 了解更多")]),e._v(" "),o("ul",[o("li",[o("a",{attrs:{href:"https://docs.docker.com/engine/swarm/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Docker Swarm mode概述"),o("OutboundLink")],1)]),e._v(" "),o("li",[o("a",{attrs:{href:"https://docs.min.io/docs/minio-docker-quickstart-guide",target:"_blank",rel:"noopener noreferrer"}},[e._v("Minio Docker快速入门"),o("OutboundLink")],1)]),e._v(" "),o("li",[o("a",{attrs:{href:"https://docs.min.io/docs/deploy-minio-on-docker-compose",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用Docker Compose部署Minio"),o("OutboundLink")],1)]),e._v(" "),o("li",[o("a",{attrs:{href:"https://docs.min.io/docs/minio-erasure-code-quickstart-guide",target:"_blank",rel:"noopener noreferrer"}},[e._v("Minio纠删码快速入门"),o("OutboundLink")],1)])]),e._v(" "),o("blockquote",[o("p",[e._v("原文: https://docs.min.io/docs/deploy-minio-on-docker-swarm.html")])])])}),[],!1,null,null,null);r.default=a.exports}}]);